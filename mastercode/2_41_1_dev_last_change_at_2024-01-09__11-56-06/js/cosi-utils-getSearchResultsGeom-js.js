(window.webpackJsonp=window.webpackJsonp||[]).push([[417],{3718:function(i,S,u){var f=Object.create,s=Object.defineProperty,P=Object.getOwnPropertyDescriptor,y=Object.getOwnPropertyNames,v=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty,m=(e,t)=>{for(var r in t)s(e,r,{get:t[r],enumerable:!0})},p=(e,t,r,g)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of y(t))!_.call(e,o)&&o!==r&&s(e,o,{get:()=>t[o],enumerable:!(g=P(t,o))||g.enumerable});return e},l=(e,t,r)=>(r=e!=null?f(v(e)):{},p(t||!e||!e.__esModule?s(r,"default",{value:e,enumerable:!0}):r,e)),O=e=>p(s({},"__esModule",{value:!0}),e),c={};m(c,{getSearchResultsCoordinates:()=>M,getSearchResultsGeometry:()=>b}),i.exports=O(c);var h=l(u(12)),k=l(u(5)),a=l(u(7));function d(e){const t=e.getGeometry().getInteriorPoints();if(t.getPoints().length===1)return t.getPoints()[0].getCoordinates().slice(0,2);if(t.getPoints().length>1){const r=e.getGeometry();return k.getCenter(r.getExtent())}return null}function M(e){const t=a.default.getters["Maps/projectionCode"],r=a.default.getters["MapMarker/markerPoint"],g=a.default.getters["MapMarker/markerPolygon"];let o=r.getSource().getFeatures(),n;return o.length===1&&(n=o[0].getGeometry().getCoordinates()),o=g.getSource().getFeatures(),o.length===1&&(n=d(o[0])),n&&e&&(n=h.transform(n,t,e)),n}function b(){const e=a.default.getters["MapMarker/markerPoint"].getSource().getFeatures(),t=a.default.getters["MapMarker/markerPolygon"].getSource().getFeatures();return e.length===1?e[0].getGeometry():t.length===1?t[0].getGeometry():null}}}]);
