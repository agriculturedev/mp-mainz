(window.webpackJsonp=window.webpackJsonp||[]).push([[551],{4080:function(P,L,O){var g=Object.create,m=Object.defineProperty,E=Object.getOwnPropertyDescriptor,x=Object.getOwnPropertyNames,F=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty,A=(o,a)=>{for(var u in a)m(o,u,{get:a[u],enumerable:!0})},y=(o,a,u,c)=>{if(a&&typeof a=="object"||typeof a=="function")for(let s of x(a))!k.call(o,s)&&s!==u&&m(o,s,{get:()=>a[s],enumerable:!(c=E(a,s))||c.enumerable});return o},i=(o,a,u)=>(u=o!=null?g(F(o)):{},y(a||!o||!o.__esModule?m(u,"default",{value:o,enumerable:!0}):u,o)),d=o=>y(m({},"__esModule",{value:!0}),o),h={};A(h,{unionFeatures:()=>M}),P.exports=d(h);var w=O(58),f=i(O(5001));function M(o){if(!Array.isArray(o)||o.length===0)return console.error(`unionFeatures: ${o} has to be a non empty array`),null;const a=new w.GeoJSON,u=a.writeFeaturesObject(o);let c=u.features[0];for(let s=1;s<u.features.length;s++)c=(0,f.default)(c,u.features[s]);return a.readFeature(c)}},4242:function(P,L,O){var g=Object.defineProperty,m=Object.getOwnPropertyDescriptor,E=Object.getOwnPropertyNames,x=Object.prototype.hasOwnProperty,F=(r,e)=>{for(var t in e)g(r,t,{get:e[t],enumerable:!0})},k=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let l of E(e))!x.call(r,l)&&l!==t&&g(r,l,{get:()=>e[l],enumerable:!(n=m(e,l))||n.enumerable});return r},A=r=>k(g({},"__esModule",{value:!0}),r),y={};F(y,{areaFactors:()=>w,bearingToAzimuth:()=>B,convertArea:()=>$,convertLength:()=>z,degreesToRadians:()=>G,earthRadius:()=>i,factors:()=>d,feature:()=>f,featureCollection:()=>b,geometry:()=>M,geometryCollection:()=>J,isNumber:()=>p,isObject:()=>H,lengthToDegrees:()=>q,lengthToRadians:()=>j,lineString:()=>s,lineStrings:()=>R,multiLineString:()=>S,multiPoint:()=>T,multiPolygon:()=>N,point:()=>o,points:()=>a,polygon:()=>u,polygons:()=>c,radiansToDegrees:()=>D,radiansToLength:()=>C,round:()=>I,unitsFactors:()=>h,validateBBox:()=>K,validateId:()=>Q}),P.exports=A(y);var i=63710088e-1,d={centimeters:i*100,centimetres:i*100,degrees:i/111325,feet:i*3.28084,inches:i*39.37,kilometers:i/1e3,kilometres:i/1e3,meters:i,metres:i,miles:i/1609.344,millimeters:i*1e3,millimetres:i*1e3,nauticalmiles:i/1852,radians:1,yards:i*1.0936},h={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:1/1e3,kilometres:1/1e3,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/i,yards:1.0936133},w={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function f(r,e,t){t===void 0&&(t={});var n={type:"Feature"};return(t.id===0||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=e||{},n.geometry=r,n}function M(r,e,t){switch(t===void 0&&(t={}),r){case"Point":return o(e).geometry;case"LineString":return s(e).geometry;case"Polygon":return u(e).geometry;case"MultiPoint":return T(e).geometry;case"MultiLineString":return S(e).geometry;case"MultiPolygon":return N(e).geometry;default:throw new Error(r+" is invalid")}}function o(r,e,t){if(t===void 0&&(t={}),!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!p(r[0])||!p(r[1]))throw new Error("coordinates must contain numbers");var n={type:"Point",coordinates:r};return f(n,e,t)}function a(r,e,t){return t===void 0&&(t={}),b(r.map(function(n){return o(n,e)}),t)}function u(r,e,t){t===void 0&&(t={});for(var n=0,l=r;n<l.length;n++){var v=l[n];if(v.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var _=0;_<v[v.length-1].length;_++)if(v[v.length-1][_]!==v[0][_])throw new Error("First and last Position are not equivalent.")}var V={type:"Polygon",coordinates:r};return f(V,e,t)}function c(r,e,t){return t===void 0&&(t={}),b(r.map(function(n){return u(n,e)}),t)}function s(r,e,t){if(t===void 0&&(t={}),r.length<2)throw new Error("coordinates must be an array of two or more positions");var n={type:"LineString",coordinates:r};return f(n,e,t)}function R(r,e,t){return t===void 0&&(t={}),b(r.map(function(n){return s(n,e)}),t)}function b(r,e){e===void 0&&(e={});var t={type:"FeatureCollection"};return e.id&&(t.id=e.id),e.bbox&&(t.bbox=e.bbox),t.features=r,t}function S(r,e,t){t===void 0&&(t={});var n={type:"MultiLineString",coordinates:r};return f(n,e,t)}function T(r,e,t){t===void 0&&(t={});var n={type:"MultiPoint",coordinates:r};return f(n,e,t)}function N(r,e,t){t===void 0&&(t={});var n={type:"MultiPolygon",coordinates:r};return f(n,e,t)}function J(r,e,t){t===void 0&&(t={});var n={type:"GeometryCollection",geometries:r};return f(n,e,t)}function I(r,e){if(e===void 0&&(e=0),e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t}function C(r,e){e===void 0&&(e="kilometers");var t=d[e];if(!t)throw new Error(e+" units is invalid");return r*t}function j(r,e){e===void 0&&(e="kilometers");var t=d[e];if(!t)throw new Error(e+" units is invalid");return r/t}function q(r,e){return D(j(r,e))}function B(r){var e=r%360;return e<0&&(e+=360),e}function D(r){var e=r%(2*Math.PI);return e*180/Math.PI}function G(r){var e=r%360;return e*Math.PI/180}function z(r,e,t){if(e===void 0&&(e="kilometers"),t===void 0&&(t="kilometers"),!(r>=0))throw new Error("length must be a positive number");return C(j(r,e),t)}function $(r,e,t){if(e===void 0&&(e="meters"),t===void 0&&(t="kilometers"),!(r>=0))throw new Error("area must be a positive number");var n=w[e];if(!n)throw new Error("invalid original units");var l=w[t];if(!l)throw new Error("invalid final units");return r/n*l}function p(r){return!isNaN(r)&&r!==null&&!Array.isArray(r)}function H(r){return!!r&&r.constructor===Object}function K(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(r.length!==4&&r.length!==6)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach(function(e){if(!p(e))throw new Error("bbox must only contain numbers")})}function Q(r){if(!r)throw new Error("id is required");if(["string","number"].indexOf(typeof r)===-1)throw new Error("id must be a number or a string")}}}]);
