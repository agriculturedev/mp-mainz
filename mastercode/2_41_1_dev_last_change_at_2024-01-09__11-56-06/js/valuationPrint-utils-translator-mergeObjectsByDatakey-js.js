(window.webpackJsonp=window.webpackJsonp||[]).push([[550,546],{3852:function(j,L,h){var S=Object.create,p=Object.defineProperty,d=Object.getOwnPropertyDescriptor,x=Object.getOwnPropertyNames,E=Object.getPrototypeOf,K=Object.prototype.hasOwnProperty,w=(e,r)=>{for(var t in r)p(e,t,{get:r[t],enumerable:!0})},m=(e,r,t,a)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of x(r))!K.call(e,n)&&n!==t&&p(e,n,{get:()=>r[n],enumerable:!(a=d(r,n))||a.enumerable});return e},A=(e,r,t)=>(t=e!=null?S(E(e)):{},m(r||!e||!e.__esModule?p(t,"default",{value:e,enumerable:!0}):t,e)),F=e=>m(p({},"__esModule",{value:!0}),e),P={};w(P,{calcMaxArrayLength:()=>c,concatSingleDatakey:()=>o,concatStringByDatakey:()=>M,findPossibleError:()=>s,formatValue:()=>D,formatValueNumber:()=>J,getDefaultOnEmptyResult:()=>l,getFlippedKnowledgeBase:()=>y,getKeysFromDataKey:()=>g,getSplittedDatakey:()=>b,mergeKnowledgeIntoDatakey:()=>_}),j.exports=F(P);var O=A(h(18)),N=A(h(284));function M(e,r,t,a,n,u){const i=s(e,r);if(i instanceof Error)return i;let f="";return Array.isArray(r)?r.forEach(v=>{f&&(f+=n),f+=o(e,v,t,a,n,u)}):f=o(e,r,t,a,n,u),f||l(r,t,a)}function o(e,r,t,a,n,u){const i=g(r),f=y(e,i,t,a),v=new Set;return f.forEach(V=>{v.add(_(V,r,u))}),[...v].join(n)}function s(e,r){if(!Array.isArray(r))return s(e,[r]);let t=!1;return r.forEach(a=>{const n=g(a),u=n.length;for(let i=0;i<u;i++)if(e[n[i]]instanceof Error){t=e[n[i]];return}}),t}function l(e,r,t){if(typeof e!="string")return t;if(typeof r=="string")return r;const a=g(e);return Array.isArray(a)&&a.length===1&&(0,O.default)(r)&&typeof r[a[0]]=="string"?r[a[0]]:t}function y(e,r,t,a){const n=c(e,r),u=[];for(let i=0;i<n;i++)u[i]={},r.forEach(f=>{u[i][f]=Array.isArray(e[f])?e[f][i]:e[f],typeof u[i][f]>"u"&&(u[i][f]=(0,O.default)(t)&&typeof t[f]=="string"?t[f]:a)});return u}function c(e,r){if(!(0,O.default)(e)||!Array.isArray(r))return 0;let t=0;return r.forEach(a=>{Array.isArray(e[a])&&t<e[a].length&&(t=e[a].length)}),t}function g(e){const r=b(e),t=r.length,a=[];let n=0;if(t===1)return r;if(t%2===0)return console.error(new Error("getKeysFromDataKey: The given datakey has a syntax problem - empty datakey or missing {{ or }}.",e)),[];for(n=0;n<t;n++)n%2===1&&a.push(r[n]);return a}function b(e){if(typeof e!="string")return[];const r="{{",t="}}";return e.replaceAll(r,t).split(t)}function _(e,r,t){if(typeof r!="string"||!(0,O.default)(e))return"";let a=r;const n="{{",u="}}";return Object.entries(e).forEach(([i,f])=>{const v=D(f,(0,O.default)(t)?t[i]:void 0);i===r?a=a.replace(i,v):a=a.replaceAll(n+i+u,v)}),a}function D(e,r){return r?.type==="Number"?J(e,r):e}function J(e,r){var t,a;let n=0;return typeof e=="number"?n=e:typeof e=="string"?e.indexOf(".")!==-1&&e.indexOf(".")>e.indexOf(",")?n=parseFloat(e.replaceAll(",","")):n=parseFloat(e.replaceAll(".","").replace(",",".")):typeof e=="boolean"?n=e?1:0:n=0,isNaN(n)&&(n=0),typeof r?.decimals=="number"&&(n=n.toFixed(r.decimals)),typeof((t=r?.thousandsSeparator)==null?void 0:t.delimAbs)=="string"&&typeof((a=r?.thousandsSeparator)==null?void 0:a.delimDec)=="string"&&(n=(0,N.default)(n,r.thousandsSeparator.delimAbs,r.thousandsSeparator.delimDec)),typeof r?.postfix=="string"&&(n=String(n)+r.postfix),String(n)}},4087:function(j,L,h){var S=Object.create,p=Object.defineProperty,d=Object.getOwnPropertyDescriptor,x=Object.getOwnPropertyNames,E=Object.getPrototypeOf,K=Object.prototype.hasOwnProperty,w=(o,s)=>{for(var l in s)p(o,l,{get:s[l],enumerable:!0})},m=(o,s,l,y)=>{if(s&&typeof s=="object"||typeof s=="function")for(let c of x(s))!K.call(o,c)&&c!==l&&p(o,c,{get:()=>s[c],enumerable:!(y=d(s,c))||y.enumerable});return o},A=(o,s,l)=>(l=o!=null?S(E(o)):{},m(s||!o||!o.__esModule?p(l,"default",{value:o,enumerable:!0}):l,o)),F=o=>m(p({},"__esModule",{value:!0}),o),P={};w(P,{mergeObjectsByDatakey:()=>M}),j.exports=F(P);var O=A(h(18)),N=h(3852);function M(o,s,l,y){const c=[];return Array.isArray(o)?(0,O.default)(s)?typeof l!="string"?(console.error(`addons/valuationPrint/utils/translator.mergeObjectsByDatakey: defaultValue is ${l}, but it has to be a string`),c):(o.forEach(g=>{Array.isArray(s[g])&&(s[g].forEach(b=>{for(const _ in b){const D=g+"."+_;typeof b[_]>"u"?b[_]=l:typeof y<"u"&&Object.prototype.hasOwnProperty.call(y,D)&&(b[_]=(0,N.formatValue)(b[_],y[D]))}}),c.push(...s[g]))}),c):(console.error(`addons/valuationPrint/utils/translator.mergeObjectsByDatakey: knowledgeBase is ${s}, but it has to be an object`),c):(console.error(`addons/valuationPrint/utils/translator.mergeObjectsByDatakey: datakey is ${o}, but it has to be an array`),c)}}}]);
