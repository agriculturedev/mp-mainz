(window.webpackJsonp=window.webpackJsonp||[]).push([[538,537],{3882:function(d,C,f){var _=Object.create,i=Object.defineProperty,G=Object.getOwnPropertyDescriptor,j=Object.getOwnPropertyNames,w=Object.getPrototypeOf,F=Object.prototype.hasOwnProperty,g=(r,o)=>{for(var n in o)i(r,n,{get:o[n],enumerable:!0})},c=(r,o,n,p)=>{if(o&&typeof o=="object"||typeof o=="function")for(let s of j(o))!F.call(r,s)&&s!==n&&i(r,s,{get:()=>o[s],enumerable:!(p=G(o,s))||p.enumerable});return r},y=(r,o,n)=>(n=r!=null?_(w(r)):{},c(o||!r||!r.__esModule?i(n,"default",{value:r,enumerable:!0}):n,r)),S=r=>c(i({},"__esModule",{value:!0}),r),b={};g(b,{bufferGeometry:()=>v}),d.exports=S(b);var h=y(f(4594)),N=f(58),x=y(f(97));function v(r,o,n="EPSG:25832"){if(!(r instanceof x.default))return console.error(`bufferGeometry: geometry is ${r}, but it has to be an instance of ol/geom/Geometry`),null;if(typeof o!="number")return console.error(`bufferGeometry: Type of radius is ${o}, but it has to be a number`),r;if(o===0)return r;const p=new N.GeoJSON,s=r.clone().transform(n,"EPSG:4326"),O=p.writeGeometryObject(s),P=(0,h.default)(O,o,{units:"meters"});return p.readGeometry(P.geometry).transform("EPSG:4326",n)}},3895:function(d,C,f){var _=Object.create,i=Object.defineProperty,G=Object.getOwnPropertyDescriptor,j=Object.getOwnPropertyNames,w=Object.getPrototypeOf,F=Object.prototype.hasOwnProperty,g=(e,t)=>{for(var a in t)i(e,a,{get:t[a],enumerable:!0})},c=(e,t,a,l)=>{if(t&&typeof t=="object"||typeof t=="function")for(let u of j(t))!F.call(e,u)&&u!==a&&i(e,u,{get:()=>t[u],enumerable:!(l=G(t,u))||l.enumerable});return e},y=(e,t,a)=>(a=e!=null?_(w(e)):{},c(t||!e||!e.__esModule?i(a,"default",{value:e,enumerable:!0}):a,e)),S=e=>c(i({},"__esModule",{value:!0}),e),b={};g(b,{collectFeatures:()=>p,createFeatureByCoordinate:()=>s,getFilter:()=>O,getPropertyNames:()=>P}),d.exports=S(b);var h=f(3882),N=y(f(21)),x=f(1202),v=f(1207),r=y(f(49)),o=f(58),n=y(f(18));function p(e,t,a,l,u,J){if(t.coordinate){const M=s(t.coordinate);u([M])}else if(t.filter==="equalTo")u(e.featureList);else{const M={featureNS:l.featureNS,featureTypes:[l.featureType],filter:O(e.geometry,t.geometryName,t.filter,t.radius),srsName:a,propertyNames:P(t.propertyName,t.geometryName,t.precompiler)};(0,x.getFeaturePOST)(l.url,M,J).then(m=>{if(m){const E=new o.WFS,D=E.readFeatures(m);u(D)}}).catch(m=>{typeof J=="function"&&J(m)})}}function s(e){return new N.default({geometry:new r.default(e)})}function O(e,t,a,l){if(!a)return;const u=l?(0,h.bufferGeometry)(e,l):e;return a==="intersects"?(0,v.intersects)(t,u):(0,v.within)(t,u)}function P(e,t,a){if(!Array.isArray(e)){console.error(`addons/valuationPrint/utils/collectFeatures: propertyName is ${e}, but it has to be an array`);return}return typeof t!="string"?(console.error(`addons/valuationPrint/utils/collectFeatures: geometryName is ${t}, but it has to be a string`),e):(0,n.default)(a)&&a.type!=="assignAttributes"?e.concat(t):e}}}]);
