(window.webpackJsonp=window.webpackJsonp||[]).push([[433],{3870:function(I,K,N){(function(h,d){var v=Object.create,E=Object.defineProperty,A=Object.getOwnPropertyDescriptor,P=Object.getOwnPropertyNames,M=Object.getPrototypeOf,O=Object.prototype.hasOwnProperty,F=(o,e)=>{for(var t in e)E(o,t,{get:e[t],enumerable:!0})},T=(o,e,t,m)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of P(e))!O.call(o,s)&&s!==t&&E(o,s,{get:()=>e[s],enumerable:!(m=A(e,s))||m.enumerable});return o},B=(o,e,t)=>(t=o!=null?v(M(o)):{},T(e||!o||!o.__esModule?E(t,"default",{value:o,enumerable:!0}):t,o)),w=o=>T(E({},"__esModule",{value:!0}),o),S={};F(S,{default:()=>x}),I.exports=w(S);var u=N(58),D=B(N(121)),b=B(N(822));const C={kml:new u.KML({extractStyles:!0}),gpx:new u.GPX,geojson:new u.GeoJSON};function L(o,e,t,m){if(e!=="auto")return m[e]===void 0?(console.warn('File import tool: Selected filetype "'+e+'" has no OL Format defined for it.'),!1):m[e];for(const s in t)if(t[s].rgx!==void 0&&o.match(t[s].rgx)!==null){if(m[s]===void 0){console.warn('File import tool: Filetype "'+s+`" is defined as supported, but there isn't any OL Format defined for it.`);continue}return m[s]}return!1}function V(o){let e=o;return e=o.replace(/<.*?cascadingstyle.*?kml:id="(.+)">\s*<style>/gmi,(t,m)=>'<Style id="'+m+'">'),e=e.replace(/<\/Style>\s*<\/.*?cascadingstyle>/gmi,"</Style>"),e}function _(o,e,t,m){const s=new DOMParser().parseFromString(o,"text/xml"),p=s.getElementsByTagName("Placemark");return s.getElementsByTagName("kml").length&&s.getElementsByTagName("kml")[0].attributes.xmlns.value.includes("/2.0")&&s.getElementsByTagName("Folder").length&&Array.prototype.forEach.call(p,l=>{const f=s.getElementsByTagName("Style"),i=l.getElementsByTagName("styleUrl")[0].firstChild.nodeValue.replace("#","");let n="";if(Array.prototype.forEach.call(f,r=>{r.attributes.id.value.includes(i)&&(n=r)}),l.getElementsByTagName("Point").length)if(n.getElementsByTagName("IconStyle").length){const r=n.getElementsByTagName("IconStyle")[0];r.getElementsByTagName("color").length&&r.removeChild(r.getElementsByTagName("color")[0]),r.getElementsByTagName("colorMode")&&r.removeChild(r.getElementsByTagName("colorMode")[0]),r.getElementsByTagName("scale")[0].childNodes[0].nodeValue="1",l.getElementsByTagName("name")[0].childNodes[0].nodeValue=""}else if(l.getElementsByTagName("Data").length&&l.getElementsByTagName("Data")[0].attributes.name.value.includes("feature_name")&&l.getElementsByTagName("Data")[1].attributes.name.value.includes("farbe")){const r=l.getElementsByTagName("Data")[1].getElementsByTagName("value")[0].childNodes[0].nodeValue,a=l.getElementsByTagName("Data")[2].getElementsByTagName("value")[0].childNodes[0].nodeValue,g=new DOMParser().parseFromString("<IconStyle><scale>0</scale><Icon><href>"+e.blue[1]+"</href></Icon></IconStyle>","text/xml");Object.entries(t).forEach(([c,y])=>{r===c&&(n.getElementsByTagName("LabelStyle")[0].getElementsByTagName("color")[0].childNodes[0].nodeValue=y)}),Object.entries(m).forEach(([c,y])=>{if(a===c){const G=new DOMParser().parseFromString("<scale>"+y+"</scale>","text/xml");n.getElementsByTagName("LabelStyle")[0].appendChild(G.getElementsByTagName("scale")[0])}}),l.getElementsByTagName("name")[0].childNodes[0].nodeValue=l.getElementsByTagName("Data")[0].getElementsByTagName("value")[0].childNodes[0].nodeValue,n.appendChild(g.getElementsByTagName("IconStyle")[0])}else if(l.getElementsByTagName("Data").length&&l.getElementsByTagName("Data")[1].attributes.name.value.includes("umkreis_gruppe")){const r=new DOMParser().parseFromString("<IconStyle><scale>0</scale><Icon><href>"+e.blue[1]+"</href></Icon></IconStyle>","text/xml");n.appendChild(r.getElementsByTagName("IconStyle")[0]),l.getElementsByTagName("name")[0].childNodes[0].nodeValue=""}else if(l.getElementsByTagName("ExtendedData").length)l.getElementsByTagName("name")[0].childNodes[0].nodeValue="";else{let r;if(n.getElementsByTagName("LineStyle").length&&n.getElementsByTagName("LineStyle")[0].getElementsByTagName("color").length){const g=n.getElementsByTagName("LineStyle")[0].getElementsByTagName("color")[0].childNodes[0].nodeValue;Object.entries(e).forEach(([,c])=>{c[0]===g&&(r=c[1])})}const a=new DOMParser().parseFromString("<IconStyle><scale>1</scale><Icon><href>"+r+"</href></Icon></IconStyle>","text/xml");n.appendChild(a.getElementsByTagName("IconStyle")[0]),l.getElementsByTagName("name")[0].childNodes[0].nodeValue=""}l.appendChild(n)}),Array.prototype.forEach.call(p,l=>{if(l.getElementsByTagName("name").length&&l.getElementsByTagName("name")[0].childNodes.length&&l.getElementsByTagName("href").length&&l.getElementsByTagName("href")[0].childNodes.length){const f=l.getElementsByTagName("name")[0].childNodes[0].nodeValue,i=l.getElementsByTagName("href")[0].childNodes[0].nodeValue;let n="";i.includes("damage_account.jpg")&&(n=i.replace("damage_account.jpg","damage_account_"+f+".jpg"),l.getElementsByTagName("name")[0].childNodes[0].nodeValue="",l.getElementsByTagName("href")[0].childNodes[0].nodeValue=n)}}),s}function j(o,e,t){h.request("Parser","getItemByAttributes",{id:"importedData"})===void 0&&(h.trigger("Parser","addFolder","Importierte Daten","importedData","tree",0),h.trigger("ModelList","renderTree"),document.getElementById("Overlayer").parentNode.appendChild(document.getElementById("importedData").parentNode)),h.trigger("Parser","addVectorLayer",o,e,t,"importedData"),h.trigger("ModelList","closeAllExpandedFolder")}var x={setSelectedFiletype:({commit:o},e)=>{o("setSelectedFiletype",e)},importKML:({state:o,dispatch:e},t)=>{const m=t.checkSameLayer,s=t.layerName,p="imported"+(0,D.default)("_"),l=L(t.filename,o.selectedFiletype,o.supportedFiletypes,C);let f=!1,i,n,r=t.raw;if(Array.isArray(m)&&m.length){i={category:d.t("common:modules.alerting.categories.error"),content:d.t("additional:modules.tools.fileImportAddon.alertingMessages.sameName",{filename:t.filename.split(".")[0]})},e("Alerting/addSingleAlert",i,{root:!0});return}if(l instanceof u.KML&&(r=_(V(t.raw),t.pointImages,t.textColors,t.textSizes)),l===!1){const a=t.filename.split("."),g=a.length>0?"*."+a[a.length-1]:"unknown";i={category:d.t("common:modules.alerting.categories.error"),content:d.t("additional:modules.tools.fileImportAddon.alertingMessages.missingFormat",{format:g})},e("Alerting/addSingleAlert",i,{root:!0});return}try{if(n=l.readFeatures(r),l instanceof u.KML){const a=[];if(n.forEach((g,c)=>{g.getGeometry()!==null&&g.getGeometry().getType()==="Point"&&g.values_.name===void 0&&a.push(c)}),a.length>0){const g=new u.KML({extractStyles:!0,showPointNames:!1}),c=g.readFeatures(r);a.forEach(y=>{n[y]=c[y]})}}}catch(a){console.warn(a),i={category:d.t("common:modules.alerting.categories.error"),content:d.t("additional:modules.tools.fileImportAddon.alertingMessages.formatError",{filename:t.filename})},e("Alerting/addSingleAlert",i,{root:!0});return}if(!Array.isArray(n)||n.length===0){i={category:d.t("common:modules.alerting.categories.error"),content:d.t("additional:modules.tools.fileImportAddon.alertingMessages.missingFileContent",{filename:t.filename})},e("Alerting/addSingleAlert",i,{root:!0});return}n.forEach(a=>{let g;if(a.get("isGeoCircle")){const c=a.get("geoCircleCenter").split(",").map(parseFloat),y=parseFloat(a.get("geoCircleRadius"));a.setGeometry(new b.default(c,y))}a.getGeometry()===null?(f=!0,i={category:d.t("common:modules.alerting.categories.error"),content:d.t("additional:modules.tools.fileImportAddon.alertingMessages.featureError")},e("Alerting/addSingleAlert",i,{root:!0})):(a.getGeometry().getType()==="GeometryCollection"?g=a.getGeometry().getGeometries():g=[a.getGeometry()],g.forEach(c=>{c.transform("EPSG:4326","EPSG:25832")}))}),f?i={category:d.t("common:modules.alerting.categories.info"),content:d.t("additional:modules.tools.fileImportAddon.alertingMessages.successPartly",{filename:t.filename})}:i={category:d.t("common:modules.alerting.categories.info"),content:d.t("additional:modules.tools.fileImportAddon.alertingMessages.success",{filename:t.filename})},e("Alerting/addSingleAlert",i,{root:!0}),e("addImportedFilename",t.filename),j(s,p,n)},addImportedFilename:({state:o,commit:e},t)=>{const m=[...o.importedFileNames];m.push(t),e("setImportedFileNames",m)}}}).call(this,N(3),N(6))}}]);
