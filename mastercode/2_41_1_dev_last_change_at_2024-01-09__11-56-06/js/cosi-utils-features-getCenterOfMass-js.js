(window.webpackJsonp=window.webpackJsonp||[]).push([[402],{3938:function(x,Z,N){var S=Object.create,G=Object.defineProperty,B=Object.getOwnPropertyDescriptor,z=Object.getOwnPropertyNames,H=Object.getPrototypeOf,K=Object.prototype.hasOwnProperty,Q=(h,i)=>{for(var g in i)G(h,g,{get:i[g],enumerable:!0})},A=(h,i,g,m)=>{if(i&&typeof i=="object"||typeof i=="function")for(let d of z(i))!K.call(h,d)&&d!==g&&G(h,d,{get:()=>i[d],enumerable:!(m=B(i,d))||m.enumerable});return h},p=(h,i,g)=>(g=h!=null?S(H(h)):{},A(i||!h||!h.__esModule?G(g,"default",{value:h,enumerable:!0}):g,h)),k=h=>A(G({},"__esModule",{value:!0}),h),T={};Q(T,{getCenterOfMass:()=>V}),x.exports=k(T);var L=p(N(4382)),E=p(N(21)),D=N(58),R=p(N(18));function V(h,i="EPSG:25832",g="EPSG:4326"){if(!(0,R.default)(h)||!(h instanceof E.default))return console.error("utils/features/getCenterOfMass: The first parameter must be an ol feature object, but got "+typeof h),!1;if(typeof i!="string"||typeof g!="string")return console.error("utils/features/getCenterOfMass: The second and the third parameter must both be a string, but got "+typeof i+" and "+typeof g),!1;const m=new D.GeoJSON({dataProjection:g,featureProjection:i}),d=m.writeFeatureObject(h),P=(0,L.default)(d);return P?.geometry.coordinates}},4158:function(x,Z,N){var S=Object.defineProperty,G=Object.getOwnPropertyDescriptor,B=Object.getOwnPropertyNames,z=Object.prototype.hasOwnProperty,H=(n,r)=>{for(var t in r)S(n,t,{get:r[t],enumerable:!0})},K=(n,r,t,v)=>{if(r&&typeof r=="object"||typeof r=="function")for(let O of B(r))!z.call(n,O)&&O!==t&&S(n,O,{get:()=>r[O],enumerable:!(v=G(r,O))||v.enumerable});return n},Q=n=>K(S({},"__esModule",{value:!0}),n),A={};H(A,{areaFactors:()=>L,bearingToAzimuth:()=>e,convertArea:()=>y,convertLength:()=>c,degreesToRadians:()=>l,earthRadius:()=>p,factors:()=>k,feature:()=>E,featureCollection:()=>d,geometry:()=>D,geometryCollection:()=>$,isNumber:()=>s,isObject:()=>w,lengthToDegrees:()=>u,lengthToRadians:()=>o,lineString:()=>g,lineStrings:()=>m,multiLineString:()=>P,multiPoint:()=>C,multiPolygon:()=>Y,point:()=>R,points:()=>V,polygon:()=>h,polygons:()=>i,radiansToDegrees:()=>f,radiansToLength:()=>a,round:()=>W,unitsFactors:()=>T,validateBBox:()=>_,validateId:()=>b}),x.exports=Q(A);var p=63710088e-1,k={centimeters:p*100,centimetres:p*100,degrees:p/111325,feet:p*3.28084,inches:p*39.37,kilometers:p/1e3,kilometres:p/1e3,meters:p,metres:p,miles:p/1609.344,millimeters:p*1e3,millimetres:p*1e3,nauticalmiles:p/1852,radians:1,yards:p*1.0936},T={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:1/1e3,kilometres:1/1e3,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/p,yards:1.0936133},L={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function E(n,r,t){t===void 0&&(t={});var v={type:"Feature"};return(t.id===0||t.id)&&(v.id=t.id),t.bbox&&(v.bbox=t.bbox),v.properties=r||{},v.geometry=n,v}function D(n,r,t){switch(t===void 0&&(t={}),n){case"Point":return R(r).geometry;case"LineString":return g(r).geometry;case"Polygon":return h(r).geometry;case"MultiPoint":return C(r).geometry;case"MultiLineString":return P(r).geometry;case"MultiPolygon":return Y(r).geometry;default:throw new Error(n+" is invalid")}}function R(n,r,t){if(t===void 0&&(t={}),!n)throw new Error("coordinates is required");if(!Array.isArray(n))throw new Error("coordinates must be an Array");if(n.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!s(n[0])||!s(n[1]))throw new Error("coordinates must contain numbers");var v={type:"Point",coordinates:n};return E(v,r,t)}function V(n,r,t){return t===void 0&&(t={}),d(n.map(function(v){return R(v,r)}),t)}function h(n,r,t){t===void 0&&(t={});for(var v=0,O=n;v<O.length;v++){var M=O[v];if(M.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var q=0;q<M[M.length-1].length;q++)if(M[M.length-1][q]!==M[0][q])throw new Error("First and last Position are not equivalent.")}var F={type:"Polygon",coordinates:n};return E(F,r,t)}function i(n,r,t){return t===void 0&&(t={}),d(n.map(function(v){return h(v,r)}),t)}function g(n,r,t){if(t===void 0&&(t={}),n.length<2)throw new Error("coordinates must be an array of two or more positions");var v={type:"LineString",coordinates:n};return E(v,r,t)}function m(n,r,t){return t===void 0&&(t={}),d(n.map(function(v){return g(v,r)}),t)}function d(n,r){r===void 0&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=n,t}function P(n,r,t){t===void 0&&(t={});var v={type:"MultiLineString",coordinates:n};return E(v,r,t)}function C(n,r,t){t===void 0&&(t={});var v={type:"MultiPoint",coordinates:n};return E(v,r,t)}function Y(n,r,t){t===void 0&&(t={});var v={type:"MultiPolygon",coordinates:n};return E(v,r,t)}function $(n,r,t){t===void 0&&(t={});var v={type:"GeometryCollection",geometries:n};return E(v,r,t)}function W(n,r){if(r===void 0&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(n*t)/t}function a(n,r){r===void 0&&(r="kilometers");var t=k[r];if(!t)throw new Error(r+" units is invalid");return n*t}function o(n,r){r===void 0&&(r="kilometers");var t=k[r];if(!t)throw new Error(r+" units is invalid");return n/t}function u(n,r){return f(o(n,r))}function e(n){var r=n%360;return r<0&&(r+=360),r}function f(n){var r=n%(2*Math.PI);return r*180/Math.PI}function l(n){var r=n%360;return r*Math.PI/180}function c(n,r,t){if(r===void 0&&(r="kilometers"),t===void 0&&(t="kilometers"),!(n>=0))throw new Error("length must be a positive number");return a(o(n,r),t)}function y(n,r,t){if(r===void 0&&(r="meters"),t===void 0&&(t="kilometers"),!(n>=0))throw new Error("area must be a positive number");var v=L[r];if(!v)throw new Error("invalid original units");var O=L[t];if(!O)throw new Error("invalid final units");return n/v*O}function s(n){return!isNaN(n)&&n!==null&&!Array.isArray(n)}function w(n){return!!n&&n.constructor===Object}function _(n){if(!n)throw new Error("bbox is required");if(!Array.isArray(n))throw new Error("bbox must be an Array");if(n.length!==4&&n.length!==6)throw new Error("bbox must be an Array of 4 or 6 numbers");n.forEach(function(r){if(!s(r))throw new Error("bbox must only contain numbers")})}function b(n){if(!n)throw new Error("id is required");if(["string","number"].indexOf(typeof n)===-1)throw new Error("id must be a number or a string")}},4168:function(x,Z,N){var S=Object.defineProperty,G=Object.getOwnPropertyDescriptor,B=Object.getOwnPropertyNames,z=Object.prototype.hasOwnProperty,H=(i,g)=>{for(var m in g)S(i,m,{get:g[m],enumerable:!0})},K=(i,g,m,d)=>{if(g&&typeof g=="object"||typeof g=="function")for(let P of B(g))!z.call(i,P)&&P!==m&&S(i,P,{get:()=>g[P],enumerable:!(d=G(g,P))||d.enumerable});return i},Q=i=>K(S({},"__esModule",{value:!0}),i),A={};H(A,{collectionOf:()=>R,containsNumber:()=>L,featureOf:()=>D,geojsonType:()=>E,getCoord:()=>k,getCoords:()=>T,getGeom:()=>V,getType:()=>h}),x.exports=Q(A);var p=N(4158);function k(i){if(!i)throw new Error("coord is required");if(!Array.isArray(i)){if(i.type==="Feature"&&i.geometry!==null&&i.geometry.type==="Point")return i.geometry.coordinates;if(i.type==="Point")return i.coordinates}if(Array.isArray(i)&&i.length>=2&&!Array.isArray(i[0])&&!Array.isArray(i[1]))return i;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function T(i){if(Array.isArray(i))return i;if(i.type==="Feature"){if(i.geometry!==null)return i.geometry.coordinates}else if(i.coordinates)return i.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function L(i){if(i.length>1&&(0,p.isNumber)(i[0])&&(0,p.isNumber)(i[1]))return!0;if(Array.isArray(i[0])&&i[0].length)return L(i[0]);throw new Error("coordinates must only contain numbers")}function E(i,g,m){if(!g||!m)throw new Error("type and name required");if(!i||i.type!==g)throw new Error("Invalid input to "+m+": must be a "+g+", given "+i.type)}function D(i,g,m){if(!i)throw new Error("No feature passed");if(!m)throw new Error(".featureOf() requires a name");if(!i||i.type!=="Feature"||!i.geometry)throw new Error("Invalid input to "+m+", Feature with geometry required");if(!i.geometry||i.geometry.type!==g)throw new Error("Invalid input to "+m+": must be a "+g+", given "+i.geometry.type)}function R(i,g,m){if(!i)throw new Error("No featureCollection passed");if(!m)throw new Error(".collectionOf() requires a name");if(!i||i.type!=="FeatureCollection")throw new Error("Invalid input to "+m+", FeatureCollection required");for(var d=0,P=i.features;d<P.length;d++){var C=P[d];if(!C||C.type!=="Feature"||!C.geometry)throw new Error("Invalid input to "+m+", Feature with geometry required");if(!C.geometry||C.geometry.type!==g)throw new Error("Invalid input to "+m+": must be a "+g+", given "+C.geometry.type)}}function V(i){return i.type==="Feature"?i.geometry:i}function h(i,g){return i.type==="FeatureCollection"?"FeatureCollection":i.type==="GeometryCollection"?"GeometryCollection":i.type==="Feature"&&i.geometry!==null?i.geometry.type:i.type}},4177:function(x,Z,N){var S=Object.defineProperty,G=Object.getOwnPropertyDescriptor,B=Object.getOwnPropertyNames,z=Object.prototype.hasOwnProperty,H=(a,o)=>{for(var u in o)S(a,u,{get:o[u],enumerable:!0})},K=(a,o,u,e)=>{if(o&&typeof o=="object"||typeof o=="function")for(let f of B(o))!z.call(a,f)&&f!==u&&S(a,f,{get:()=>o[f],enumerable:!(e=G(o,f))||e.enumerable});return a},Q=a=>K(S({},"__esModule",{value:!0}),a),A={};H(A,{coordAll:()=>V,coordEach:()=>k,coordReduce:()=>T,featureEach:()=>D,featureReduce:()=>R,findPoint:()=>W,findSegment:()=>$,flattenEach:()=>g,flattenReduce:()=>m,geomEach:()=>h,geomReduce:()=>i,lineEach:()=>C,lineReduce:()=>Y,propEach:()=>L,propReduce:()=>E,segmentEach:()=>d,segmentReduce:()=>P}),x.exports=Q(A);var p=N(4158);function k(a,o,u){if(a!==null)for(var e,f,l,c,y,s,w,_=0,b=0,n,r=a.type,t=r==="FeatureCollection",v=r==="Feature",O=t?a.features.length:1,M=0;M<O;M++){w=t?a.features[M].geometry:v?a.geometry:a,n=w?w.type==="GeometryCollection":!1,y=n?w.geometries.length:1;for(var q=0;q<y;q++){var F=0,X=0;if(c=n?w.geometries[q]:w,c!==null){s=c.coordinates;var J=c.type;switch(_=u&&(J==="Polygon"||J==="MultiPolygon")?1:0,J){case null:break;case"Point":if(o(s,b,M,F,X)===!1)return!1;b++,F++;break;case"LineString":case"MultiPoint":for(e=0;e<s.length;e++){if(o(s[e],b,M,F,X)===!1)return!1;b++,J==="MultiPoint"&&F++}J==="LineString"&&F++;break;case"Polygon":case"MultiLineString":for(e=0;e<s.length;e++){for(f=0;f<s[e].length-_;f++){if(o(s[e][f],b,M,F,X)===!1)return!1;b++}J==="MultiLineString"&&F++,J==="Polygon"&&X++}J==="Polygon"&&F++;break;case"MultiPolygon":for(e=0;e<s.length;e++){for(X=0,f=0;f<s[e].length;f++){for(l=0;l<s[e][f].length-_;l++){if(o(s[e][f][l],b,M,F,X)===!1)return!1;b++}X++}F++}break;case"GeometryCollection":for(e=0;e<c.geometries.length;e++)if(k(c.geometries[e],o,u)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function T(a,o,u,e){var f=u;return k(a,function(l,c,y,s,w){c===0&&u===void 0?f=l:f=o(f,l,c,y,s,w)},e),f}function L(a,o){var u;switch(a.type){case"FeatureCollection":for(u=0;u<a.features.length&&o(a.features[u].properties,u)!==!1;u++);break;case"Feature":o(a.properties,0);break}}function E(a,o,u){var e=u;return L(a,function(f,l){l===0&&u===void 0?e=f:e=o(e,f,l)}),e}function D(a,o){if(a.type==="Feature")o(a,0);else if(a.type==="FeatureCollection")for(var u=0;u<a.features.length&&o(a.features[u],u)!==!1;u++);}function R(a,o,u){var e=u;return D(a,function(f,l){l===0&&u===void 0?e=f:e=o(e,f,l)}),e}function V(a){var o=[];return k(a,function(u){o.push(u)}),o}function h(a,o){var u,e,f,l,c,y,s,w,_,b,n=0,r=a.type==="FeatureCollection",t=a.type==="Feature",v=r?a.features.length:1;for(u=0;u<v;u++){for(y=r?a.features[u].geometry:t?a.geometry:a,w=r?a.features[u].properties:t?a.properties:{},_=r?a.features[u].bbox:t?a.bbox:void 0,b=r?a.features[u].id:t?a.id:void 0,s=y?y.type==="GeometryCollection":!1,c=s?y.geometries.length:1,f=0;f<c;f++){if(l=s?y.geometries[f]:y,l===null){if(o(null,n,w,_,b)===!1)return!1;continue}switch(l.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(o(l,n,w,_,b)===!1)return!1;break}case"GeometryCollection":{for(e=0;e<l.geometries.length;e++)if(o(l.geometries[e],n,w,_,b)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}n++}}function i(a,o,u){var e=u;return h(a,function(f,l,c,y,s){l===0&&u===void 0?e=f:e=o(e,f,l,c,y,s)}),e}function g(a,o){h(a,function(u,e,f,l,c){var y=u===null?null:u.type;switch(y){case null:case"Point":case"LineString":case"Polygon":return o((0,p.feature)(u,f,{bbox:l,id:c}),e,0)===!1?!1:void 0}var s;switch(y){case"MultiPoint":s="Point";break;case"MultiLineString":s="LineString";break;case"MultiPolygon":s="Polygon";break}for(var w=0;w<u.coordinates.length;w++){var _=u.coordinates[w],b={type:s,coordinates:_};if(o((0,p.feature)(b,f),e,w)===!1)return!1}})}function m(a,o,u){var e=u;return g(a,function(f,l,c){l===0&&c===0&&u===void 0?e=f:e=o(e,f,l,c)}),e}function d(a,o){g(a,function(u,e,f){var l=0;if(u.geometry){var c=u.geometry.type;if(!(c==="Point"||c==="MultiPoint")){var y,s=0,w=0,_=0;if(k(u,function(b,n,r,t,v){if(y===void 0||e>s||t>w||v>_){y=b,s=e,w=t,_=v,l=0;return}var O=(0,p.lineString)([y,b],u.properties);if(o(O,e,f,v,l)===!1)return!1;l++,y=b})===!1)return!1}}})}function P(a,o,u){var e=u,f=!1;return d(a,function(l,c,y,s,w){f===!1&&u===void 0?e=l:e=o(e,l,c,y,s,w),f=!0}),e}function C(a,o){if(!a)throw new Error("geojson is required");g(a,function(u,e,f){if(u.geometry!==null){var l=u.geometry.type,c=u.geometry.coordinates;switch(l){case"LineString":if(o(u,e,f,0,0)===!1)return!1;break;case"Polygon":for(var y=0;y<c.length;y++)if(o((0,p.lineString)(c[y],u.properties),e,f,y)===!1)return!1;break}}})}function Y(a,o,u){var e=u;return C(a,function(f,l,c,y){l===0&&u===void 0?e=f:e=o(e,f,l,c,y)}),e}function $(a,o){if(o=o||{},!(0,p.isObject)(o))throw new Error("options is invalid");var u=o.featureIndex||0,e=o.multiFeatureIndex||0,f=o.geometryIndex||0,l=o.segmentIndex||0,c=o.properties,y;switch(a.type){case"FeatureCollection":u<0&&(u=a.features.length+u),c=c||a.features[u].properties,y=a.features[u].geometry;break;case"Feature":c=c||a.properties,y=a.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":y=a;break;default:throw new Error("geojson is invalid")}if(y===null)return null;var s=y.coordinates;switch(y.type){case"Point":case"MultiPoint":return null;case"LineString":return l<0&&(l=s.length+l-1),(0,p.lineString)([s[l],s[l+1]],c,o);case"Polygon":return f<0&&(f=s.length+f),l<0&&(l=s[f].length+l-1),(0,p.lineString)([s[f][l],s[f][l+1]],c,o);case"MultiLineString":return e<0&&(e=s.length+e),l<0&&(l=s[e].length+l-1),(0,p.lineString)([s[e][l],s[e][l+1]],c,o);case"MultiPolygon":return e<0&&(e=s.length+e),f<0&&(f=s[e].length+f),l<0&&(l=s[e][f].length-l-1),(0,p.lineString)([s[e][f][l],s[e][f][l+1]],c,o)}throw new Error("geojson is invalid")}function W(a,o){if(o=o||{},!(0,p.isObject)(o))throw new Error("options is invalid");var u=o.featureIndex||0,e=o.multiFeatureIndex||0,f=o.geometryIndex||0,l=o.coordIndex||0,c=o.properties,y;switch(a.type){case"FeatureCollection":u<0&&(u=a.features.length+u),c=c||a.features[u].properties,y=a.features[u].geometry;break;case"Feature":c=c||a.properties,y=a.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":y=a;break;default:throw new Error("geojson is invalid")}if(y===null)return null;var s=y.coordinates;switch(y.type){case"Point":return(0,p.point)(s,c,o);case"MultiPoint":return e<0&&(e=s.length+e),(0,p.point)(s[e],c,o);case"LineString":return l<0&&(l=s.length+l),(0,p.point)(s[l],c,o);case"Polygon":return f<0&&(f=s.length+f),l<0&&(l=s[f].length+l),(0,p.point)(s[f][l],c,o);case"MultiLineString":return e<0&&(e=s.length+e),l<0&&(l=s[e].length+l),(0,p.point)(s[e][l],c,o);case"MultiPolygon":return e<0&&(e=s.length+e),f<0&&(f=s[e].length+f),l<0&&(l=s[e][f].length-l),(0,p.point)(s[e][f][l],c,o)}throw new Error("geojson is invalid")}}}]);
