(window.webpackJsonp=window.webpackJsonp||[]).push([[340],{3975:function(v,N,u){var g=Object.create,l=Object.defineProperty,S=Object.getOwnPropertyDescriptor,b=Object.getOwnPropertyNames,w=Object.getPrototypeOf,O=Object.prototype.hasOwnProperty,F=(e,r)=>{for(var o in r)l(e,o,{get:r[o],enumerable:!0})},f=(e,r,o,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of b(r))!O.call(e,t)&&t!==o&&l(e,t,{get:()=>r[t],enumerable:!(s=S(r,t))||s.enumerable});return e},p=(e,r,o)=>(o=e!=null?g(w(e)):{},f(r||!e||!e.__esModule?l(o,"default",{value:e,enumerable:!0}):o,e)),D=e=>f(l({},"__esModule",{value:!0}),e),h=(e,r,o)=>new Promise((s,t)=>{var i=n=>{try{c(o.next(n))}catch(d){t(d)}},a=n=>{try{c(o.throw(n))}catch(d){t(d)}},c=n=>n.done?s(n.value):Promise.resolve(n.value).then(i,a);c((o=o.apply(e,r)).next())}),y={};F(y,{default:()=>x}),v.exports=D(y);var k=u(41),m=u(58),P=p(u(3722)),$=p(u(3720)),j=p(u(3759)),T=p(u(457)),x={parseState(e,r,o=[],s=!1){for(const t in e)if(Array.isArray(e[t])&&Object.hasOwnProperty.call(r,t)&&e[t].every(i=>typeof i=="string"))for(const i of e[t]){if(!Object.hasOwnProperty.call(r[t],i))continue;let a=`${t}/set${i[0].toUpperCase()+i.substring(1)}`;switch(o.length>0&&(a=o.join("/")+"/"+a),`${t}/${i}`){case"ScenarioBuilder/scenarios":this.$store.commit(a,this.parseScenarios(r[t][i]));break;case"DistrictSelector/selectedDistrictNames":this.$nextTick(()=>h(this,null,function*(){yield this.$nextTick(),this.setDistrictsByName({districtNames:r[t][i],zoomToExtent:!1})}));break;case"Maps/layerIds":this.$nextTick(()=>{r[t][i].forEach(c=>this.getTopicsLayer(c))});break;case"Maps/loadedLayers":setTimeout(()=>{this.$nextTick(()=>{r[t][i].forEach(c=>this.getTopicsLayer(c))})},500);break;case"Maps/view":mapCollection.getMap("2D").setView(r[t][i]);break;case"Maps/center":mapCollection.getMapView("2D").setCenter(r[t][i]);break;case"Maps/zoom":mapCollection.getMapView("2D").setZoom(r[t][i]);break;case"AreaSelector/geometry":this.$nextTick(()=>h(this,null,function*(){yield this.$nextTick(),this.commitState(a,i,r[t][i])}));break;case"Draw/layer":this.parseDrawFeatures(r,a,t,i);break;case"Dashboard/statsFeatureFilter":{this.useTemplatesForMapping||this.commitState(a,i,r[t][i]);break}default:this.commitState(a,i,r[t][i])}}else e[t].constructor===Object&&(r[t]=this.parseState(e[t],r[t],[...o,t],s))},commitState(e,r,o){if(r==="active"){if(o){this.$store.commit(e,o);const s=e.replace("/setActive","/id"),t=(0,k.getComponent)(this.$store.getters[s]);t&&t.set("isActive",o)}}else{const s=this.hasDeepFeatures(e,r)?this.deepParse(o):this.parseFeatures(o);this.$store.commit(e,s)}},parseFeatures(e){var r;const o=new m.GeoJSON;return Array.isArray(e)?e.map(s=>{var t;return s?.constructor===Object&&((t=s?.properties)!=null&&t.isOlFeature)?o.readFeature(s):s}):e?.constructor===Object&&((r=e?.properties)!=null&&r.isOlFeature)?o.readFeature(e):e?.constructor===Object&&e?.isOlGeometry?o.readGeometry(e):e},parseScenarios(e){const r=new m.GeoJSON;return e.map(o=>this.parseScenario(o,r))},parseScenario(e,r){const o=e.simulatedFeatures.map(a=>this.parseScenarioFeature(a,r)),s=e.modifiedFeatures.map(a=>this.parseScenarioFeature(a,r)),t=e.neighborhoods.map(a=>this.parseScenarioNeighborhood(a,r));return new j.default(e.name,this.simGuideLayer,{simulatedFeatures:o,modifiedFeatures:s,neighborhoods:t})},parseScenarioFeature(e,r){const o=this.getTopicsLayer(e.layer),s=r.readFeature(e.feature),t=e.scenarioData,i=e.feature.properties.originalData;return i&&(i.geometry&&this.parseGeometry(i.geometry),s.set("originalData",i)),t.geometry&&(t.geometry=this.parseGeometry(t.geometry)),new $.default(s,o,void 0,t)},parseScenarioNeighborhood(e,r){const o=r.readFeature(e.feature);return new P.default(o,this.simNeighborhoodLayer,this.districtLevels)},parseGeometry({type:e,coordinates:r}){if(!(!e||!r))return new this.geomConstructors[e](r)},parseDrawFeatures(e,r,o,s){return h(this,null,function*(){this.$store.commit(r,yield this.addNewLayerIfNotExists({layerName:this.$store.state.Tools.Draw.layerId})),this.$store.dispatch("Tools/Draw/clearLayer");const t=this.$store.state.Tools.Draw.layer.getSource();for(const i of this.parseFeatures(e[o][s])){const a=i.get("drawState"),c={color:a.color,colorContour:a.colorContour,font:a.font,fontSize:a.fontSize,strokeWidth:a.strokeWidth,text:a.text};i.setStyle(function(n){if(n.get("isVisible"))return T.default.createStyle(n.get("drawState"),c)}),t.addFeature(i)}})},deepParse(e){var r;if((e?.constructor===Object||Array.isArray(e))&&!((r=e.properties)!=null&&r.isOlFeature||e.isOlGeometry)){for(const o in e)e[o]=this.deepParse(e[o]);return e}return this.parseFeatures(e)}}}}]);
