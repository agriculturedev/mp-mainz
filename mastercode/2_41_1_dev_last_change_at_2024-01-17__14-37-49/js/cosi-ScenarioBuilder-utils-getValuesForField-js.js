(window.webpackJsonp=window.webpackJsonp||[]).push([[352,422],{3650:function(g,x,s){var P=Object.create,p=Object.defineProperty,b=Object.getOwnPropertyDescriptor,w=Object.getOwnPropertyNames,d=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty,h=(t,n,u,_)=>{if(n&&typeof n=="object"||typeof n=="function")for(let l of w(n))!j.call(t,l)&&l!==u&&p(t,l,{get:()=>n[l],enumerable:!(_=b(n,l))||_.enumerable});return t},f=(t,n,u)=>(u=t!=null?P(d(t)):{},h(n||!t||!t.__esModule?p(u,"default",{value:t,enumerable:!0}):u,t)),y=f(s(106));function S(t){var n;if(typeof t!="object"||t===null||typeof t.getSource!="function"||typeof((n=t.getSource())==null?void 0:n.getFeatures)!="function")return console.error("utils/layer/getLayerSource: layer must be a layer with a vector source",t),null;const u=t.getSource();return u.constructor===y.default?u.getSource():u}g.exports={getLayerSource:S}},3981:function(g,x,s){var P=Object.create,p=Object.defineProperty,b=Object.getOwnPropertyDescriptor,w=Object.getOwnPropertyNames,d=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty,h=(e,o)=>{for(var r in o)p(e,r,{get:o[r],enumerable:!0})},f=(e,o,r,c)=>{if(o&&typeof o=="object"||typeof o=="function")for(let a of w(o))!j.call(e,a)&&a!==r&&p(e,a,{get:()=>o[a],enumerable:!(c=b(o,a))||c.enumerable});return e},y=(e,o,r)=>(r=e!=null?P(d(e)):{},f(o||!e||!e.__esModule?p(r,"default",{value:e,enumerable:!0}):r,e)),S=e=>f(p({},"__esModule",{value:!0}),e),t=(e,o,r)=>new Promise((c,a)=>{var O=i=>{try{F(r.next(i))}catch(L){a(L)}},v=i=>{try{F(r.throw(i))}catch(L){a(L)}},F=i=>i.done?c(i.value):Promise.resolve(i.value).then(O,v);F((r=r.apply(e,o)).next())}),n={};h(n,{default:()=>J}),g.exports=S(n);var u=s(1202),_=y(s(60)),l=y(s(7)),M=s(58),D=s(3650);const N=new M.WFS;function E(e){return l.default.getters["Maps/getLayerById"]({layerId:e})}function J(e,o){return t(this,null,function*(){let r;const c=_.default.getLayerWhere({id:o});if(c){const a=yield(0,u.getFeatureGET)(c.url,{featureType:c.featureType,version:c.version});r=N.readFeatures(a)}else{const a=E(o);r=(0,D.getLayerSource)(a).getFeatures()}return r.reduce((a,O)=>{const v=O.getProperties()[e];return v&&!a.includes(v)&&a.push(v),a},[])})}}}]);
