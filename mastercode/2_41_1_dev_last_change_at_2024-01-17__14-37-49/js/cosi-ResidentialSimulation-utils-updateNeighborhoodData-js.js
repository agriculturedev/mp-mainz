(window.webpackJsonp=window.webpackJsonp||[]).push([[333],{3969:function(U,q,C){var D=Object.defineProperty,_=Object.getOwnPropertyDescriptor,H=Object.getOwnPropertyNames,O=Object.prototype.hasOwnProperty,V=(g,i)=>{for(var t in i)D(g,t,{get:i[t],enumerable:!0})},P=(g,i,t,l)=>{if(i&&typeof i=="object"||typeof i=="function")for(let f of H(i))!O.call(g,f)&&f!==t&&D(g,f,{get:()=>i[f],enumerable:!(l=_(i,f))||l.enumerable});return g},w=g=>P(D({},"__esModule",{value:!0}),g),R={};V(R,{updateArea:()=>j,updateBgf:()=>M,updateDensity:()=>J,updateGfz:()=>G,updateHousholdSize:()=>m,updateLivingSpace:()=>N,updateLivingSpaceRatio:()=>A,updateResidents:()=>L,updateUnits:()=>x}),U.exports=w(R);function j(g,i,t){const l=g,f=i.livingSpace,r=i.avgHouseholdSize,e=i.gfz,v=l*e,u=Math.round(100*(v*i.livingSpaceRatio)/f)/100,S=u*1e6/l,n=u/r;i.residents=u,i.populationDensity=S,i.bgf=v,i.housingUnits=n,t.residents=u,t.populationDensity=S,t.bgf=v,t.housingUnits=n}function x(g,i,t,l,f,r){if(l===0)return[];const e=i.area,v=i.livingSpace,u=i.avgHouseholdSize,S=i.livingSpaceRatio,n=g,p=n*u,s=p*1e6/e,a=p*(v/i.livingSpaceRatio),z=a/e,c=y(u,s,z,a,v,e,S,f,r);return c.length>0?(i.housingUnits=t.housingUnits,c):(i.residents=p,i.populationDensity=s,i.bgf=a,i.gfz=z,i.housingUnits=n,t.housingUnits=n,t.residents=p,t.populationDensity=s,t.bgf=a,t.gfz=z,[])}function L(g,i,t,l,f,r){if(l===0)return[];const e=i.area,v=i.livingSpace,u=i.avgHouseholdSize,S=i.livingSpaceRatio,n=g,p=g/u,s=n*1e6/e,a=n*(v/S),z=a/e,c=y(u,s,z,a,v,e,S,f,r);return c.length>0?(i.residents=t.residents,c):(i.housingUnits=p,i.populationDensity=s,i.bgf=a,i.gfz=z,i.residents=n,t.residents=n,t.housingUnits=p,t.populationDensity=s,t.bgf=a,t.gfz=z,[])}function J(g,i,t,l,f,r){if(l===0)return[];const e=i.area,v=i.livingSpace,u=i.avgHouseholdSize,S=i.livingSpaceRatio,n=g,p=g*e/1e6,s=p/u,a=p*(v/S),z=a/e,c=y(u,n,z,a,v,e,S,f,r);return c.length>0?(i.populationDensity=t.populationDensity,c):(i.housingUnits=s,i.residents=p,i.bgf=a,i.gfz=z,i.populationDensity=n,t.populationDensity=n,t.housingUnits=s,t.residents=p,t.bgf=a,t.gfz=z,[])}function N(g,i,t,l,f,r){if(l===0)return[];const e=i.area,v=i.avgHouseholdSize,u=i.livingSpaceRatio,S=i.gfz,n=S*e,p=g,s=n*u/p,a=s*1e6/e,z=s/v,c=y(v,a,S,n,p,e,u,f,r);return c.length>0?(i.livingSpace=t.livingSpace,c):(i.livingSpace=p,i.housingUnits=z,i.residents=s,i.populationDensity=a,i.bgf=n,i.livingSpace=p,t.livingSpace=p,t.housingUnits=z,t.residents=s,t.populationDensity=a,t.bgf=n,[])}function A(g,i,t,l,f,r){if(l===0)return[];const e=i.area,v=i.avgHouseholdSize,u=i.gfz,S=i.bgf,n=i.livingSpace,p=g,s=S*p/n,a=s*1e6/e,z=s/v,c=y(v,a,u,S,n,e,p,f,r);return c.length>0?(i.livingSpaceRatio=t.livingSpaceRatio,c):(i.housingUnits=z,i.residents=s,i.populationDensity=a,i.livingSpaceRatio=p,t.livingSpaceRatio=p,t.housingUnits=z,t.residents=s,t.populationDensity=a,[])}function G(g,i,t,l,f,r){if(l===0)return[];const e=i.area,v=i.avgHouseholdSize,u=i.livingSpace,S=i.livingSpaceRatio,n=g,p=n*e,s=p*S/u,a=s*1e6/e,z=s/v,c=y(v,a,n,p,u,e,S,f,r);return c.length>0?(i.gfz=t.gfz,c):(i.housingUnits=z,i.residents=s,i.populationDensity=a,i.bgf=p,i.gfz=n,t.gfz=n,t.housingUnits=z,t.residents=s,t.populationDensity=a,t.bgf=p,[])}function M(g,i,t,l,f,r){if(l===0)return[];const e=i.area,v=i.avgHouseholdSize,u=i.livingSpace,S=i.livingSpaceRatio,n=g,p=n/e,s=n*S/u,a=s*1e6/e,z=s/v,c=y(v,a,p,n,u,e,S,f,r);return c.length>0?(i.bgf=t.bgf,c):(i.housingUnits=z,i.residents=s,i.populationDensity=a,i.gfz=p,i.bgf=n,t.bgf=n,t.housingUnits=z,t.residents=s,t.populationDensity=a,t.gfz=p,[])}function m(g,i,t,l,f,r){if(l===0)return[];const e=i.area,v=i.livingSpace,u=i.residents,S=i.gfz,n=i.livingSpaceRatio,p=S*e,s=g,a=u*1e6/e,z=u/s,c=y(s,a,S,p,v,e,n,f,r);return c.length>0?(i.avgHouseholdSize=t.avgHouseholdSize,c):(i.housingUnits=z,i.populationDensity=a,i.bgf=p,i.avgHouseholdSize=s,t.avgHouseholdSize=s,t.housingUnits=z,t.populationDensity=a,t.bgf=p,[])}function y(g,i,t,l,f,r,e,v={householdSize:1,populationDensity:0,gfz:0,livingSpace:10,livingSpaceRatio:0},u={householdSize:6,populationDensity:5e4,gfz:4,livingSpace:100,livingSpaceRatio:1}){const S=[];return(g<v.householdSize||g>u.householdSize)&&S.push({id:"householdSize",val:g}),(i<v.populationDensity||i>u.populationDensity)&&S.push({id:"populationDensity",val:i}),(t<v.gfz||t>u.gfz)&&S.push({id:"gfz",val:t}),(l<v.gfz*r||l>u.gfz*r)&&S.push({id:"bgf",val:l}),(f<v.livingSpace||f>u.livingSpace)&&S.push({id:"livingSpace",val:f}),(e<v.livingSpaceRatio||e>=u.livingSpaceRatio)&&S.push({id:"livingSpaceRatio",val:e}),S}}}]);
