(window.webpackJsonp=window.webpackJsonp||[]).push([[459],{3874:function(v,O,c){(function(p){var s=Object.defineProperty,g=Object.getOwnPropertyDescriptor,y=Object.getOwnPropertyNames,b=Object.prototype.hasOwnProperty,d=(e,t)=>{for(var n in t)s(e,n,{get:t[n],enumerable:!0})},_=(e,t,n,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of y(t))!b.call(e,r)&&r!==n&&s(e,r,{get:()=>t[r],enumerable:!(a=g(t,r))||a.enumerable});return e},w=e=>_(s({},"__esModule",{value:!0}),e),f={};d(f,{default:()=>h}),v.exports=w(f);var o=c(151),h={getCanvasLayer:function(e){const t=p.request("MapView","getOptions").resolution;let n=[],a={};if(!Array.isArray(e))return e;e.forEach(r=>{r instanceof o.Group?r.getLayers().getArray().forEach(i=>{n.push(this.buildCanvasLayerType(i,t))}):n.push(this.buildCanvasLayerType(r,t))}),n=n.reverse();for(const r of n)if(typeof r<"u"){a=r;break}return a},buildCanvasLayerType:function(e,t){const n=p.request("MapView","getCurrentExtent"),a=e.getMinResolution(),r=e.getMaxResolution(),i=this.isInScaleRange(a,r,t);let l=[],u;return i&&(e instanceof o.Image||e instanceof o.Tile||e instanceof o.VectorTile?u=e:e instanceof o.Vector&&(l=e.getSource().getFeaturesInExtent(n),l.length>0&&(u=e))),u},isInScaleRange:function(e,t,n){let a=!1;return e<=n&&t>=n&&(a=!0),a}}}).call(this,c(3))}}]);
