(window.webpackJsonp=window.webpackJsonp||[]).push([[414],{3710:function(M,B,p){var y=Object.create,c=Object.defineProperty,k=Object.getOwnPropertyDescriptor,j=Object.getOwnPropertyNames,G=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty,F=(o,a)=>{for(var u in a)c(o,u,{get:a[u],enumerable:!0})},w=(o,a,u,g)=>{if(a&&typeof a=="object"||typeof a=="function")for(let s of j(a))!T.call(o,s)&&s!==u&&c(o,s,{get:()=>a[s],enumerable:!(g=k(a,s))||g.enumerable});return o},i=(o,a,u)=>(u=o!=null?y(G(o)):{},w(a||!o||!o.__esModule?c(u,"default",{value:o,enumerable:!0}):u,o)),b=o=>w(c({},"__esModule",{value:!0}),o),P={};F(P,{default:()=>L}),M.exports=b(P);var h=i(p(4222)),l=i(p(450)),_=i(p(286));const m={utm32:"EPSG:25832",wgs84:"EPSG:4326"};function L(o,a=0,u=m.utm32){if(!(Array.isArray(o)&&typeof parseFloat(a)=="number"))return console.error(`getBoundingGeometry: ${o} has to be defined and an array. ${a} has to be defined and a number`),!1;const g=parseFloat(a),s=new l.default,O=o.map(v=>v.clone().getGeometry().transform(u,m.wgs84)),E=new _.default(O),x=s.writeGeometryObject(E),C=(0,h.default)(x,g,{units:"meters"}),N=C.features.map(v=>s.readGeometry(v.geometry).transform(m.wgs84,u));return new _.default(N)}},4158:function(M,B,p){var y=Object.defineProperty,c=Object.getOwnPropertyDescriptor,k=Object.getOwnPropertyNames,j=Object.prototype.hasOwnProperty,G=(r,e)=>{for(var t in e)y(r,t,{get:e[t],enumerable:!0})},T=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let f of k(e))!j.call(r,f)&&f!==t&&y(r,f,{get:()=>e[f],enumerable:!(n=c(e,f))||n.enumerable});return r},F=r=>T(y({},"__esModule",{value:!0}),r),w={};G(w,{areaFactors:()=>h,bearingToAzimuth:()=>I,convertArea:()=>$,convertLength:()=>z,degreesToRadians:()=>q,earthRadius:()=>i,factors:()=>b,feature:()=>l,featureCollection:()=>s,geometry:()=>_,geometryCollection:()=>C,isNumber:()=>S,isObject:()=>H,lengthToDegrees:()=>J,lengthToRadians:()=>D,lineString:()=>u,lineStrings:()=>g,multiLineString:()=>O,multiPoint:()=>E,multiPolygon:()=>x,point:()=>m,points:()=>L,polygon:()=>o,polygons:()=>a,radiansToDegrees:()=>R,radiansToLength:()=>v,round:()=>N,unitsFactors:()=>P,validateBBox:()=>K,validateId:()=>Q}),M.exports=F(w);var i=63710088e-1,b={centimeters:i*100,centimetres:i*100,degrees:i/111325,feet:i*3.28084,inches:i*39.37,kilometers:i/1e3,kilometres:i/1e3,meters:i,metres:i,miles:i/1609.344,millimeters:i*1e3,millimetres:i*1e3,nauticalmiles:i/1852,radians:1,yards:i*1.0936},P={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:1/1e3,kilometres:1/1e3,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/i,yards:1.0936133},h={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function l(r,e,t){t===void 0&&(t={});var n={type:"Feature"};return(t.id===0||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=e||{},n.geometry=r,n}function _(r,e,t){switch(t===void 0&&(t={}),r){case"Point":return m(e).geometry;case"LineString":return u(e).geometry;case"Polygon":return o(e).geometry;case"MultiPoint":return E(e).geometry;case"MultiLineString":return O(e).geometry;case"MultiPolygon":return x(e).geometry;default:throw new Error(r+" is invalid")}}function m(r,e,t){if(t===void 0&&(t={}),!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!S(r[0])||!S(r[1]))throw new Error("coordinates must contain numbers");var n={type:"Point",coordinates:r};return l(n,e,t)}function L(r,e,t){return t===void 0&&(t={}),s(r.map(function(n){return m(n,e)}),t)}function o(r,e,t){t===void 0&&(t={});for(var n=0,f=r;n<f.length;n++){var d=f[n];if(d.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var A=0;A<d[d.length-1].length;A++)if(d[d.length-1][A]!==d[0][A])throw new Error("First and last Position are not equivalent.")}var W={type:"Polygon",coordinates:r};return l(W,e,t)}function a(r,e,t){return t===void 0&&(t={}),s(r.map(function(n){return o(n,e)}),t)}function u(r,e,t){if(t===void 0&&(t={}),r.length<2)throw new Error("coordinates must be an array of two or more positions");var n={type:"LineString",coordinates:r};return l(n,e,t)}function g(r,e,t){return t===void 0&&(t={}),s(r.map(function(n){return u(n,e)}),t)}function s(r,e){e===void 0&&(e={});var t={type:"FeatureCollection"};return e.id&&(t.id=e.id),e.bbox&&(t.bbox=e.bbox),t.features=r,t}function O(r,e,t){t===void 0&&(t={});var n={type:"MultiLineString",coordinates:r};return l(n,e,t)}function E(r,e,t){t===void 0&&(t={});var n={type:"MultiPoint",coordinates:r};return l(n,e,t)}function x(r,e,t){t===void 0&&(t={});var n={type:"MultiPolygon",coordinates:r};return l(n,e,t)}function C(r,e,t){t===void 0&&(t={});var n={type:"GeometryCollection",geometries:r};return l(n,e,t)}function N(r,e){if(e===void 0&&(e=0),e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t}function v(r,e){e===void 0&&(e="kilometers");var t=b[e];if(!t)throw new Error(e+" units is invalid");return r*t}function D(r,e){e===void 0&&(e="kilometers");var t=b[e];if(!t)throw new Error(e+" units is invalid");return r/t}function J(r,e){return R(D(r,e))}function I(r){var e=r%360;return e<0&&(e+=360),e}function R(r){var e=r%(2*Math.PI);return e*180/Math.PI}function q(r){var e=r%360;return e*Math.PI/180}function z(r,e,t){if(e===void 0&&(e="kilometers"),t===void 0&&(t="kilometers"),!(r>=0))throw new Error("length must be a positive number");return v(D(r,e),t)}function $(r,e,t){if(e===void 0&&(e="meters"),t===void 0&&(t="kilometers"),!(r>=0))throw new Error("area must be a positive number");var n=h[e];if(!n)throw new Error("invalid original units");var f=h[t];if(!f)throw new Error("invalid final units");return r/n*f}function S(r){return!isNaN(r)&&r!==null&&!Array.isArray(r)}function H(r){return!!r&&r.constructor===Object}function K(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(r.length!==4&&r.length!==6)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach(function(e){if(!S(e))throw new Error("bbox must only contain numbers")})}function Q(r){if(!r)throw new Error("id is required");if(["string","number"].indexOf(typeof r)===-1)throw new Error("id must be a number or a string")}}}]);
