(window.webpackJsonp=window.webpackJsonp||[]).push([[450],{4192:function(O,x,g){(function(p,y){O.exports=y()})(x,function(){"use strict";var p="day";return function(y,k,h){var v=function(o){return o.add(4-o.isoWeekday(),p)},c=k.prototype;c.isoWeekYear=function(){return v(this).year()},c.isoWeek=function(o){if(!this.$utils().u(o))return this.add(7*(o-this.isoWeek()),p);var i,f,l,a,w=v(this),P=(i=this.isoWeekYear(),f=this.$u,l=(f?h.utc:h)().year(i).startOf("year"),a=4-l.isoWeekday(),l.isoWeekday()>4&&(a+=7),l.add(a,p));return w.diff(P,"week")+1},c.isoWeekday=function(o){return this.$utils().u(o)?this.day()||7:this.day(this.day()%7?o:o-7)};var _=c.startOf;c.startOf=function(o,i){var f=this.$utils(),l=!!f.u(i)||i;return f.p(o)==="isoweek"?l?this.date(this.date()-(this.isoWeekday()-1)).startOf("day"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf("day"):_.bind(this)(o,i)}}})},4215:function(O,x,g){var p=Object.create,y=Object.defineProperty,k=Object.getOwnPropertyDescriptor,h=Object.getOwnPropertyNames,v=Object.getPrototypeOf,c=Object.prototype.hasOwnProperty,_=(t,e)=>{for(var n in e)y(t,n,{get:e[n],enumerable:!0})},o=(t,e,n,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of h(e))!c.call(t,r)&&r!==n&&y(t,r,{get:()=>e[r],enumerable:!(s=k(e,r))||s.enumerable});return t},i=(t,e,n)=>(n=t!=null?p(v(t)):{},o(e||!t||!t.__esModule?y(n,"default",{value:t,enumerable:!0}):n,t)),f=t=>o(y({},"__esModule",{value:!0}),t),l={};_(l,{getFirstAdventMoment:()=>j,getGaussianEasterMoment:()=>A,getPublicHoliday:()=>E,getPublicHolidays:()=>S,hasHolidayInWeek:()=>H,isCalendarMoment:()=>W,publicHolidayMatrix:()=>u}),O.exports=f(l);var a=i(g(53)),w=i(g(4192)),P=i(g(373));a.default.extend(P.default),a.default.extend(w.default);const u={newYearsDay:{translationKey:"common:utils.calendar.newYearsDay",getMoment:t=>(0,a.default)(t+"-01-01","YYYY-MM-DD")},epiphany:{translationKey:"common:utils.calendar.epiphany",getMoment:t=>(0,a.default)(t+"-01-06","YYYY-MM-DD")},goodFriday:{translationKey:"common:utils.calendar.goodFriday",getMoment:(t,e)=>(0,a.default)(e).subtract(2,"day")},easterSunday:{translationKey:"common:utils.calendar.easterSunday",getMoment:(t,e)=>(0,a.default)(e)},easterMonday:{translationKey:"common:utils.calendar.easterMonday",getMoment:(t,e)=>(0,a.default)(e).add(1,"day")},laborDay:{translationKey:"common:utils.calendar.laborDay",getMoment:t=>(0,a.default)(t+"-05-01","YYYY-MM-DD")},ascensionDay:{translationKey:"common:utils.calendar.ascensionDay",getMoment:(t,e)=>(0,a.default)(e).add(39,"day")},pentecostSunday:{translationKey:"common:utils.calendar.pentecostSunday",getMoment:(t,e)=>(0,a.default)(e).add(49,"day")},pentecostMonday:{translationKey:"common:utils.calendar.pentecostMonday",getMoment:(t,e)=>(0,a.default)(e).add(50,"day")},corpusChristi:{translationKey:"common:utils.calendar.corpusChristi",getMoment:(t,e)=>(0,a.default)(e).add(60,"day")},peaceFestival:{translationKey:"common:utils.calendar.peaceFestival",getMoment:t=>(0,a.default)(t+"-08-08","YYYY-MM-DD")},assumptionDay:{translationKey:"common:utils.calendar.assumptionDay",getMoment:t=>(0,a.default)(t+"-08-15","YYYY-MM-DD")},germanUnityDay:{translationKey:"common:utils.calendar.germanUnityDay",getMoment:t=>(0,a.default)(t+"-10-03","YYYY-MM-DD")},reformationDay:{translationKey:"common:utils.calendar.reformationDay",getMoment:t=>(0,a.default)(t+"-10-31","YYYY-MM-DD")},allSaintsDay:{translationKey:"common:utils.calendar.allSaintsDay",getMoment:t=>(0,a.default)(t+"-11-01","YYYY-MM-DD")},penanceDay:{translationKey:"common:utils.calendar.penanceDay",getMoment:(t,e,n)=>(0,a.default)(n).subtract(11,"day")},firstAdvent:{translationKey:"common:utils.calendar.firstAdvent",getMoment:(t,e,n)=>(0,a.default)(n)},secondAdvent:{translationKey:"common:utils.calendar.secondAdvent",getMoment:(t,e,n)=>(0,a.default)(n).add(7,"day")},thirdAdvent:{translationKey:"common:utils.calendar.thirdAdvent",getMoment:(t,e,n)=>(0,a.default)(n).add(14,"day")},fourthAdvent:{translationKey:"common:utils.calendar.fourthAdvent",getMoment:(t,e,n)=>(0,a.default)(n).add(21,"day")},christmasEve:{translationKey:"common:utils.calendar.christmasEve",getMoment:t=>(0,a.default)(t+"-12-24","YYYY-MM-DD")},christmasDay:{translationKey:"common:utils.calendar.christmasDay",getMoment:t=>(0,a.default)(t+"-12-25","YYYY-MM-DD")},secondDayOfChristmas:{translationKey:"common:utils.calendar.secondDayOfChristmas",getMoment:t=>(0,a.default)(t+"-12-26","YYYY-MM-DD")},newYearsEve:{translationKey:"common:utils.calendar.newYearsEve",getMoment:t=>(0,a.default)(t+"-12-31","YYYY-MM-DD")}};function H(t,e=!1,n=!1){if(!(t instanceof Date)&&typeof t!="string")return!1;let s=(0,a.default)(t,n).startOf("isoWeek");if(!s.isValid())return!1;for(let r=0;r<=6;r++){if(E(s,e))return!0;s=s.add(1,"day")}return!1}function E(t,e=!1,n=!1){const s=(0,a.default)(t,n),r=s.format("YYYY"),m=A(r),d=j(r),b=Array.isArray(e)?e:Object.keys(u),K=b.length;let M="",D=null;for(let Y=0;Y<K;Y++)if(M=b[Y],!!W(u[M])&&(D=u[M].getMoment(r,m,d),s.format("YYYY-MM-DD")===D.format("YYYY-MM-DD")))return{moment:D,holidayKey:M,translationKey:u[M].translationKey};return!1}function S(t,e=!1){const n=A(t),s=j(t),r=Array.isArray(e)?e:Object.keys(u),m=[];return r.forEach(d=>{W(u[d])&&m.push({moment:u[d].getMoment(t,n,s),holidayKey:d,translationKey:u[d].translationKey})}),m}function W(t){return typeof t=="object"&&t!==null&&typeof t.getMoment=="function"&&typeof t.translationKey=="string"}function A(t){const e=parseInt(t,10),n=Math.floor(e/100),s=15+Math.floor((3*n+3)/4)-Math.floor((8*n+13)/25),r=2-Math.floor((3*n+3)/4),m=e%19,d=(19*m+s)%30,b=Math.floor(Math.floor(d+m/11)/29),K=21+d-b,M=7-Math.floor(e+e/4+r)%7,D=7-(K-M)%7,Y=Math.floor(K+D);return Y>31?(0,a.default)(t+"-04-"+(Y-31),"YYYY-MM-D"):(0,a.default)(t+"-03-"+Y,"YYYY-MM-D")}function j(t){return(0,a.default)(t+"-12-25","YYYY-MM-DD").startOf("isoWeek").subtract(22,"day")}}}]);
