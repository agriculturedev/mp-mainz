(window.webpackJsonp=window.webpackJsonp||[]).push([[15,450],{4128:function(C,K,P){var x=Object.create,H=Object.defineProperty,W=Object.getOwnPropertyDescriptor,_=Object.getOwnPropertyNames,k=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty,F=(b,r)=>{for(var n in r)H(b,n,{get:r[n],enumerable:!0})},g=(b,r,n,a)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of _(r))!I.call(b,t)&&t!==n&&H(b,t,{get:()=>r[t],enumerable:!(a=W(r,t))||a.enumerable});return b},O=(b,r,n)=>(n=b!=null?x(k(b)):{},g(r||!b||!b.__esModule?H(n,"default",{value:b,enumerable:!0}):n,b)),$=b=>g(H({},"__esModule",{value:!0}),b),S={};F(S,{TrafficCountApi:()=>A}),C.exports=$(S);var f=P(459),N=P(2116),j=P(4215),l=O(P(53)),U=O(P(4192));l.default.extend(U.default),P(2097),l.default.locale("de");class A{constructor(r,n,a,t,e,s){if(!s){if((typeof A.instance!="object"||A.instance===null)&&(A.instance={}),Object.prototype.hasOwnProperty.call(A.instance,r))return A.instance[r];A.instance[r]=this}this.sensorThingsVersion=n,this.http=t||new f.SensorThingsHttp({removeIotLinks:!0}),this.mqttClient=e||new N.SensorThingsMqtt(a),this.httpHost=r,this.baseUrlHttp=r+"/"+this.sensorThingsVersion,this.subscriptionTopics={},this.layerNameInfix="_Zaehlstelle",this.mqttClient&&typeof this.mqttClient.on=="function"&&this.mqttClient.on("message",(o,i,u)=>{if(Object.prototype.hasOwnProperty.call(this.subscriptionTopics,o)){if(!Array.isArray(this.subscriptionTopics[o]))return;this.subscriptionTopics[o].forEach(d=>{typeof d=="function"&&d(i,u)})}})}defaultErrorHandler(...r){console.warn(r)}checkForObservations(r){return Array.isArray(r)&&r.length>0&&Object.prototype.hasOwnProperty.call(r[0],"Datastreams")&&Array.isArray(r[0].Datastreams)&&r[0].Datastreams.length>0&&Object.prototype.hasOwnProperty.call(r[0].Datastreams[0],"@iot.id")&&Array.isArray(r[0].Datastreams[0].Observations)}sumObservations(r){if(!this.checkForObservations(r))return!1;let n=0;return r[0].Datastreams[0].Observations.forEach(a=>{a?.result&&(n+=a.result)}),n}getFirstDate(r,n){if(!this.checkForObservations(r))return!1;let a=n||(0,l.default)().toISOString(),t="";return r[0].Datastreams[0].Observations.forEach(e=>{e?.phenomenonTime&&(t=this.parsePhenomenonTime(e.phenomenonTime),t<a&&(a=t))}),a}parsePhenomenonTime(r){return typeof r!="string"?"":r.split("/")[0]}mqttSubscribe(r,n,a){Object.prototype.hasOwnProperty.call(this.subscriptionTopics,r)||(this.subscriptionTopics[r]=[]),this.subscriptionTopics[r].push(a),this.mqttClient&&typeof this.mqttClient.subscribe=="function"&&this.mqttClient.subscribe(r,n)}updateTitle(r,n,a,t,e){const s=this.baseUrlHttp+"/Things("+r+")";return this.http.get(s,o=>{var i;Array.isArray(o)&&o.length>0&&((i=o[0])!=null&&i.name)?typeof n=="function"&&n(o[0].name):(a||this.defaultErrorHandler)("TrafficCountAPI.updateTitle: the response does not include a Thing with a proper name",o)},t,e,a||this.defaultErrorHandler)}updateDirection(r,n,a,t,e){const s=this.baseUrlHttp+"/Things("+r+")";return this.http.get(s,o=>{var i,u;Array.isArray(o)&&o.length>0&&((i=o[0])!=null&&i.properties)&&((u=o[0].properties)!=null&&u.richtung)?typeof n=="function"&&n(o[0].properties.richtung):(a||this.defaultErrorHandler)("TrafficCountAPI.updateDirection: the response does not include a Thing with a proper name",o)},t,e,a||this.defaultErrorHandler)}updateDay(r,n,a,t,e,s,o,i){let u=0;const d=(0,l.default)(a,"YYYY-MM-DD").toISOString(),m=(0,l.default)(a,"YYYY-MM-DD").add(1,"day").toISOString(),c=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_15-Min';$expand=Observations($filter=phenomenonTime ge "+d+" and phenomenonTime lt "+m+"))";return this.http.get(c,h=>{if(!this.checkForObservations(h)){(e||this.defaultErrorHandler)("TrafficCountAPI.updateDay: the dataset does not include a datastream with an observation",h);return}if(u=this.sumObservations(h),typeof t=="function"&&t(a,u),a!==(i||(0,l.default)().format("YYYY-MM-DD")))return;const p=h[0].Datastreams[0]["@iot.id"],Y=this.sensorThingsVersion+"/Datastreams("+p+")/Observations";this.mqttSubscribe(Y,{rh:2},(D,y)=>{y&&y?.retain&&y.retain===!0||(D&&D?.result?(u+=D.result,typeof t=="function"&&t(a,u)):(e||this.defaultErrorHandler)("TrafficCountAPI.updateDay: the payload does not include a result",D))})},s,o,e||this.defaultErrorHandler)}updateYear(r,n,a,t,e,s,o,i){let u=0,d=0;const m=(0,l.default)(a,"YYYY").toISOString(),c=(0,l.default)(a,"YYYY").add(1,"year").toISOString(),h=(0,l.default)().startOf("day").toISOString(),p=i||(0,l.default)().format("YYYY"),Y=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_1-Tag';$expand=Observations($filter=phenomenonTime ge "+m+" and phenomenonTime lt "+(a===p?h:c)+"))",D=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_15-Min';$expand=Observations($filter=phenomenonTime ge "+h+"))";return this.http.get(Y,y=>{if(!this.checkForObservations(y)){(e||this.defaultErrorHandler)("TrafficCountAPI.updateYear: datasetYear does not include a datastream with an observation",y);return}u=this.sumObservations(y),typeof t=="function"&&t(a,u),a===p&&this.http.get(D,v=>{this.checkForObservations(v)||(e||this.defaultErrorHandler)("TrafficCountAPI.updateYear: dataset15min does not include a datastream with an observation",v),d=this.sumObservations(v),typeof t=="function"&&t(a,u+d);const w=v[0].Datastreams[0]["@iot.id"],M=this.sensorThingsVersion+"/Datastreams("+w+")/Observations";this.mqttSubscribe(M,{rh:2},(E,T)=>{T&&T?.retain&&T.retain===!0||((!E||!E?.result)&&(e||this.defaultErrorHandler)("TrafficCountAPI.updateYear: the payload does not include a result",E),d+=E.result,typeof t=="function"&&t(a,u+d))})},!1,o,e||this.defaultErrorHandler)},s,a!==p?o:!1,e||this.defaultErrorHandler)}updateTotal(r,n,a,t,e,s){let o=0,i=0,u=!1;const d=(0,l.default)().startOf("isoWeek").toISOString(),m=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_1-Woche';$expand=Observations($filter=phenomenonTime lt "+d+"))",c=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_15-Min';$expand=Observations($filter=phenomenonTime ge "+d+"))";return this.http.get(m,h=>{this.checkForObservations(h)||(t||this.defaultErrorHandler)("TrafficCountAPI.updateTotal: datasetWeekly does not include a datastream with an observation",h),o=this.sumObservations(h),u=this.getFirstDate(h),this.http.get(c,p=>{this.checkForObservations(p)||(t||this.defaultErrorHandler)("TrafficCountAPI.updateTotal: dataset15min does not include a datastream with an observation",p),i=this.sumObservations(p),u=this.getFirstDate(p,u),typeof a=="function"&&a((0,l.default)(u).format("YYYY-MM-DD"),o+i);const Y=p[0].Datastreams[0]["@iot.id"],D=this.sensorThingsVersion+"/Datastreams("+Y+")/Observations";this.mqttSubscribe(D,{rh:2},(y,v)=>{v&&v?.retain&&v.retain===!0||((!y||!y?.result)&&(t||this.defaultErrorHandler)("TrafficCountAPI.updateTotal: the payload does not include a result",y),i+=y.result,typeof a=="function"&&a((0,l.default)(u).format("YYYY-MM-DD"),o+i))})},!1,s,t||this.defaultErrorHandler)},e,!1,t||this.defaultErrorHandler)}updateWorkingDayAverage(r,n,a,t,e,s,o,i){const u=(0,l.default)().subtract(a,"day").toISOString(),d=(0,l.default)().toISOString(),m=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_1-Tag';$expand=Observations($filter=phenomenonTime ge "+u+" and phenomenonTime lt "+d+";$orderby=phenomenonTime ASC))";return this.http.get(m,c=>{if(this.checkForObservations(c)){const h=this.getFirstDate(c),p=c[0].Datastreams[0].Observations;let Y=0,D=0;p.forEach(y=>{const v=this.parsePhenomenonTime(y?.phenomenonTime),w=(0,j.getPublicHoliday)(v,t),M=(0,l.default)(v).isoWeekday();w||M===6||M===7||(Y+=typeof y?.result=="number"?y.result:0,D++)}),typeof e=="function"&&e((0,l.default)(h).format("YYYY-MM-DD"),D!==0?Math.round(Y/D):0)}else(s||this.defaultErrorHandler)("TrafficCountAPI.updateWorkingDayAverage: dataset does not include a datastream with observations",c)},o,i,s||this.defaultErrorHandler)}updateHighestWorkloadDay(r,n,a,t,e,s,o){const i=(0,l.default)(a,"YYYY").toISOString(),u=(0,l.default)(a,"YYYY").add(1,"year").toISOString(),d=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_1-Tag';$expand=Observations($filter=phenomenonTime ge "+i+" and phenomenonTime lt "+u+";$orderby=result DESC;$top=1))";return this.http.get(d,m=>{if(this.checkForObservations(m)){const c=this.sumObservations(m),h=this.getFirstDate(m);typeof t=="function"&&t((0,l.default)(h).format("YYYY-MM-DD"),c)}else(e||this.defaultErrorHandler)("TrafficCountAPI.updateHighestWorkloadDay: dataset does not include a datastream with an observation",m)},s,o,e||this.defaultErrorHandler)}updateHighestWorkloadWeek(r,n,a,t,e,s,o){const i=(0,l.default)(a,"YYYY").toISOString(),u=(0,l.default)(a,"YYYY").add(1,"year").toISOString(),d=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_1-Woche';$expand=Observations($filter=phenomenonTime ge "+i+" and phenomenonTime lt "+u+";$orderby=result DESC;$top=1))";return this.http.get(d,m=>{if(this.checkForObservations(m)){const c=this.sumObservations(m),h=this.getFirstDate(m);typeof t=="function"&&t((0,l.default)(h).week(),c)}else(e||this.defaultErrorHandler)("TrafficCountAPI.updateHighestWorkloadWeek: dataset does not include a datastream with an observation",m)},s,o,e||this.defaultErrorHandler)}updateHighestWorkloadMonth(r,n,a,t,e,s,o){const i=(0,l.default)(a,"YYYY").toISOString(),u=(0,l.default)(a,"YYYY").add(1,"year").toISOString(),d=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_1-Tag';$expand=Observations($filter=phenomenonTime ge "+i+" and phenomenonTime lt "+u+"))",m={"01":0};let c=0,h=0,p;return this.http.get(d,Y=>{this.checkForObservations(Y)?(Y[0].Datastreams[0].Observations.forEach(D=>{!D?.result||!D?.phenomenonTime||(p=(0,l.default)(this.parsePhenomenonTime(D.phenomenonTime)).format("MM"),Object.prototype.hasOwnProperty.call(m,p)||(m[p]=0),m[p]+=D.result,m[p]>h&&(h=m[p],c=p))}),typeof t=="function"&&t(c,h)):(e||this.defaultErrorHandler)("TrafficCountAPI.updateHighestWorkloadMonth: dataset does not include a datastream with an observation",Y)},s,o,e||this.defaultErrorHandler)}updateDataset(r,n,a,t,e,s,o,i){const u=a.from,d=a.until,m=a.interval,c=(0,l.default)(u,"YYYY-MM-DD").toISOString(),h=(0,l.default)(d,"YYYY-MM-DD").add(1,"day").toISOString(),p="Anzahl_Kfz_withoutSV",Y="Anzahl_SV",D=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_"+m+"';$expand=Observations($filter=phenomenonTime ge "+c+" and phenomenonTime le "+h+";$orderby=phenomenonTime asc))",y={},v=i||(0,l.default)().format("YYYY-MM-DD");return y[n]={},this.http.get(D,w=>{if(this.checkForObservations(w)){if(w[0].Datastreams[0].Observations.forEach(M=>{if(typeof M?.result!="number"||!M?.phenomenonTime)return;const E=(0,l.default)(this.parsePhenomenonTime(M.phenomenonTime)).format("YYYY-MM-DD HH:mm:ss");y[n][E]=M.result}),n===p?this.updateDataset(r,Y,a,M=>{typeof t=="function"&&(Object.assign(y,M),t(y))},e,!1,o,i):typeof t=="function"&&t(y),d>=v){const M=w[0].Datastreams[0]["@iot.id"],E=this.sensorThingsVersion+"/Datastreams("+M+")/Observations";this.mqttSubscribe(E,{rh:2},(T,q)=>{if(!(q&&q?.retain&&q.retain===!0))if(T&&T?.result&&T?.phenomenonTime){const V=(0,l.default)(this.parsePhenomenonTime(T.phenomenonTime)).format("YYYY-MM-DD HH:mm:ss");y[n][V]=T.result,typeof t=="function"&&t(y)}else(e||this.defaultErrorHandler)("TrafficCountAPI.updateDataset: the payload does not include a result",n,T)})}}else(e||this.defaultErrorHandler)("TrafficCountAPI.updateDataset: dataset does not include a datastream with an observation",n,w)},s,n!==p?o:!1,e||this.defaultErrorHandler)}subscribeLastUpdate(r,n,a,t,e,s){const o=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_15-Min')";return this.http.get(o,i=>{var u;if(Array.isArray(i)&&i.length>0&&((u=i[0])!=null&&u.Datastreams)&&Array.isArray(i[0].Datastreams)&&i[0].Datastreams.length>0&&Object.prototype.hasOwnProperty.call(i[0].Datastreams[0],"@iot.id")){const d=i[0].Datastreams[0]["@iot.id"],m=this.sensorThingsVersion+"/Datastreams("+d+")/Observations";this.mqttSubscribe(m,{rh:0},c=>{if(c&&c?.resultTime){if(typeof a=="function"){const h=(0,l.default)(c.resultTime).format("YYYY-MM-DD HH:mm:ss");a(h)}}else(t||this.defaultErrorHandler)("TrafficCountAPI.subscribeLastUpdate: the payload does not include a resultTime",c)})}else(t||this.defaultErrorHandler)("TrafficCountAPI.subscribeLastUpdate: the response does not include a Datastream with a proper @iot.id",i)},e,s,t||this.defaultErrorHandler)}unsubscribeEverything(r){const n=Object.keys(this.getSubscriptionTopics());this.setSubscriptionTopics({}),this.mqttClient&&typeof this.mqttClient.unsubscribe=="function"&&Array.isArray(n)&&n.length>0&&n.forEach(a=>{this.mqttClient.unsubscribe(a)}),typeof r=="function"&&r()}downloadData(r,n,a,t,e,s,o){typeof s=="function"&&s(),this.updateTitle(r,i=>{this.updateDataset(r,n,a,u=>{typeof t=="function"&&t({title:i,data:u}),typeof o=="function"&&o()},e,!1,!1,(0,l.default)().add(1,"month").format("YYYY-MM-DD"))},e)}getFirstDateEver(r,n,a,t,e,s){const o=this.baseUrlHttp+"/Things("+r+")?$expand=Datastreams($filter=properties/layerName eq '"+n+this.layerNameInfix+"_1-Woche';$expand=Observations)";return this.http.get(o,i=>{if(!this.checkForObservations(i)){(t||this.defaultErrorHandler)("TrafficCountAPI.getFirstDate: datasetWeekly does not include a datastream with an observation",i);return}typeof a=="function"&&a(this.getFirstDate(i))},e,s,t||this.defaultErrorHandler)}getSubscriptionTopics(){return this.subscriptionTopics}setSubscriptionTopics(r){this.subscriptionTopics=r}getBaseUrlHttp(){return this.baseUrlHttp}getMqttClient(){return this.mqttClient}getSensorThingsHttp(){return this.http}getLayerNameInfix(){return this.layerNameInfix}}},4192:function(C,K,P){(function(x,H){C.exports=H()})(K,function(){"use strict";var x="day";return function(H,W,_){var k=function(g){return g.add(4-g.isoWeekday(),x)},I=W.prototype;I.isoWeekYear=function(){return k(this).year()},I.isoWeek=function(g){if(!this.$utils().u(g))return this.add(7*(g-this.isoWeek()),x);var O,$,S,f,N=k(this),j=(O=this.isoWeekYear(),$=this.$u,S=($?_.utc:_)().year(O).startOf("year"),f=4-S.isoWeekday(),S.isoWeekday()>4&&(f+=7),S.add(f,x));return N.diff(j,"week")+1},I.isoWeekday=function(g){return this.$utils().u(g)?this.day()||7:this.day(this.day()%7?g:g-7)};var F=I.startOf;I.startOf=function(g,O){var $=this.$utils(),S=!!$.u(O)||O;return $.p(g)==="isoweek"?S?this.date(this.date()-(this.isoWeekday()-1)).startOf("day"):this.date(this.date()-1-(this.isoWeekday()-1)+7).endOf("day"):F.bind(this)(g,O)}}})},4215:function(C,K,P){var x=Object.create,H=Object.defineProperty,W=Object.getOwnPropertyDescriptor,_=Object.getOwnPropertyNames,k=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty,F=(t,e)=>{for(var s in e)H(t,s,{get:e[s],enumerable:!0})},g=(t,e,s,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of _(e))!I.call(t,i)&&i!==s&&H(t,i,{get:()=>e[i],enumerable:!(o=W(e,i))||o.enumerable});return t},O=(t,e,s)=>(s=t!=null?x(k(t)):{},g(e||!t||!t.__esModule?H(s,"default",{value:t,enumerable:!0}):s,t)),$=t=>g(H({},"__esModule",{value:!0}),t),S={};F(S,{getFirstAdventMoment:()=>a,getGaussianEasterMoment:()=>n,getPublicHoliday:()=>A,getPublicHolidays:()=>b,hasHolidayInWeek:()=>U,isCalendarMoment:()=>r,publicHolidayMatrix:()=>l}),C.exports=$(S);var f=O(P(53)),N=O(P(4192)),j=O(P(373));f.default.extend(j.default),f.default.extend(N.default);const l={newYearsDay:{translationKey:"common:utils.calendar.newYearsDay",getMoment:t=>(0,f.default)(t+"-01-01","YYYY-MM-DD")},epiphany:{translationKey:"common:utils.calendar.epiphany",getMoment:t=>(0,f.default)(t+"-01-06","YYYY-MM-DD")},goodFriday:{translationKey:"common:utils.calendar.goodFriday",getMoment:(t,e)=>(0,f.default)(e).subtract(2,"day")},easterSunday:{translationKey:"common:utils.calendar.easterSunday",getMoment:(t,e)=>(0,f.default)(e)},easterMonday:{translationKey:"common:utils.calendar.easterMonday",getMoment:(t,e)=>(0,f.default)(e).add(1,"day")},laborDay:{translationKey:"common:utils.calendar.laborDay",getMoment:t=>(0,f.default)(t+"-05-01","YYYY-MM-DD")},ascensionDay:{translationKey:"common:utils.calendar.ascensionDay",getMoment:(t,e)=>(0,f.default)(e).add(39,"day")},pentecostSunday:{translationKey:"common:utils.calendar.pentecostSunday",getMoment:(t,e)=>(0,f.default)(e).add(49,"day")},pentecostMonday:{translationKey:"common:utils.calendar.pentecostMonday",getMoment:(t,e)=>(0,f.default)(e).add(50,"day")},corpusChristi:{translationKey:"common:utils.calendar.corpusChristi",getMoment:(t,e)=>(0,f.default)(e).add(60,"day")},peaceFestival:{translationKey:"common:utils.calendar.peaceFestival",getMoment:t=>(0,f.default)(t+"-08-08","YYYY-MM-DD")},assumptionDay:{translationKey:"common:utils.calendar.assumptionDay",getMoment:t=>(0,f.default)(t+"-08-15","YYYY-MM-DD")},germanUnityDay:{translationKey:"common:utils.calendar.germanUnityDay",getMoment:t=>(0,f.default)(t+"-10-03","YYYY-MM-DD")},reformationDay:{translationKey:"common:utils.calendar.reformationDay",getMoment:t=>(0,f.default)(t+"-10-31","YYYY-MM-DD")},allSaintsDay:{translationKey:"common:utils.calendar.allSaintsDay",getMoment:t=>(0,f.default)(t+"-11-01","YYYY-MM-DD")},penanceDay:{translationKey:"common:utils.calendar.penanceDay",getMoment:(t,e,s)=>(0,f.default)(s).subtract(11,"day")},firstAdvent:{translationKey:"common:utils.calendar.firstAdvent",getMoment:(t,e,s)=>(0,f.default)(s)},secondAdvent:{translationKey:"common:utils.calendar.secondAdvent",getMoment:(t,e,s)=>(0,f.default)(s).add(7,"day")},thirdAdvent:{translationKey:"common:utils.calendar.thirdAdvent",getMoment:(t,e,s)=>(0,f.default)(s).add(14,"day")},fourthAdvent:{translationKey:"common:utils.calendar.fourthAdvent",getMoment:(t,e,s)=>(0,f.default)(s).add(21,"day")},christmasEve:{translationKey:"common:utils.calendar.christmasEve",getMoment:t=>(0,f.default)(t+"-12-24","YYYY-MM-DD")},christmasDay:{translationKey:"common:utils.calendar.christmasDay",getMoment:t=>(0,f.default)(t+"-12-25","YYYY-MM-DD")},secondDayOfChristmas:{translationKey:"common:utils.calendar.secondDayOfChristmas",getMoment:t=>(0,f.default)(t+"-12-26","YYYY-MM-DD")},newYearsEve:{translationKey:"common:utils.calendar.newYearsEve",getMoment:t=>(0,f.default)(t+"-12-31","YYYY-MM-DD")}};function U(t,e=!1,s=!1){if(!(t instanceof Date)&&typeof t!="string")return!1;let o=(0,f.default)(t,s).startOf("isoWeek");if(!o.isValid())return!1;for(let i=0;i<=6;i++){if(A(o,e))return!0;o=o.add(1,"day")}return!1}function A(t,e=!1,s=!1){const o=(0,f.default)(t,s),i=o.format("YYYY"),u=n(i),d=a(i),m=Array.isArray(e)?e:Object.keys(l),c=m.length;let h="",p=null;for(let Y=0;Y<c;Y++)if(h=m[Y],!!r(l[h])&&(p=l[h].getMoment(i,u,d),o.format("YYYY-MM-DD")===p.format("YYYY-MM-DD")))return{moment:p,holidayKey:h,translationKey:l[h].translationKey};return!1}function b(t,e=!1){const s=n(t),o=a(t),i=Array.isArray(e)?e:Object.keys(l),u=[];return i.forEach(d=>{r(l[d])&&u.push({moment:l[d].getMoment(t,s,o),holidayKey:d,translationKey:l[d].translationKey})}),u}function r(t){return typeof t=="object"&&t!==null&&typeof t.getMoment=="function"&&typeof t.translationKey=="string"}function n(t){const e=parseInt(t,10),s=Math.floor(e/100),o=15+Math.floor((3*s+3)/4)-Math.floor((8*s+13)/25),i=2-Math.floor((3*s+3)/4),u=e%19,d=(19*u+o)%30,m=Math.floor(Math.floor(d+u/11)/29),c=21+d-m,h=7-Math.floor(e+e/4+i)%7,p=7-(c-h)%7,Y=Math.floor(c+p);return Y>31?(0,f.default)(t+"-04-"+(Y-31),"YYYY-MM-D"):(0,f.default)(t+"-03-"+Y,"YYYY-MM-D")}function a(t){return(0,f.default)(t+"-12-25","YYYY-MM-DD").startOf("isoWeek").subtract(22,"day")}}}]);
